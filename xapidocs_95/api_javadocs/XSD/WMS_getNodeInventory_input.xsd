<?xml version="1.0" encoding="UTF-8"?>
<xsd:schema attributeFormDefault="unqualified"
    elementFormDefault="qualified"
    targetNamespace="http://www.sterlingcommerce.com/documentation/WMS/getNodeInventory/input"
    xmlns:xsd="http://www.w3.org/2001/XMLSchema"
    xmlns:yfc="http://www.sterlingcommerce.com/documentation/WMS/getNodeInventory/input" xmlns:yfctype="http://www.sterlingcommerce.com/documentation/types">
    <xsd:annotation yfc:fileName="WMS_getNodeInventory_input.xsd" yfc:rootElement="NodeInventory">
        <xsd:appinfo source="yfc:structure">
            <NodeInventory hasAttributes="Y">
                <Inventory hasAttributes="Y">
                    <Receipt hasAttributes="Y"/>
                    <InventoryItem hasAttributes="Y"/>
                    <TagDetail hasAttributes="Y"/>
                    <SerialList>
                        <SerialDetail hasAttributes="Y"/>
                    </SerialList>
                </Inventory>
                <Zones>
                    <Zone hasAttributes="Y"/>
                </Zones>
                <DataAccessFilter hasAttributes="Y"/>
            </NodeInventory>
        </xsd:appinfo>
    </xsd:annotation>
    <xsd:import
        namespace="http://www.sterlingcommerce.com/documentation/types" schemaLocation="datatypes.xsd"/>
    <xsd:element name="NodeInventory" type="yfc:NodeInventoryXSDType">
        <xsd:annotation yfc:tableName="YFS_LOCATION">
            <xsd:documentation>Warehouse zones are further divided into locations of different sizes where inventory is stored. Each location belongs to a zone and a node. It is classified as INTRANSIT, REGULAR, VIRTUAL, STAGING or DOCK. It has attributes like aisle number, bay number, level number etc.</xsd:documentation>
        </xsd:annotation>
    </xsd:element>
    <xsd:complexType name="NodeInventoryXSDType">
        <xsd:all>
            <xsd:element maxOccurs="1" minOccurs="0" ref="yfc:Inventory"/>
            <xsd:element maxOccurs="1" minOccurs="0" ref="yfc:Zones"/>
            <xsd:element maxOccurs="1" minOccurs="0" ref="yfc:DataAccessFilter"/>
        </xsd:all>
        <xsd:attribute name="EnterpriseCode" type="yfctype:OrgCode" use="optional">
            <xsd:annotation yfc:columnName="ORGANIZATION_CODE" yfc:tableName="YFS_INVENTORY_ITEM">
                <xsd:documentation>Inventory organization code for the enterprise, to identify the item.</xsd:documentation>
            </xsd:annotation>
        </xsd:attribute>
        <xsd:attribute name="FreezeMoveIn" type="yfctype:Flag" use="optional">
            <xsd:annotation yfc:columnName="FREEZE_MOVE_IN" yfc:tableName="YFS_LOCATION">
                <xsd:documentation>This flag indicates whether the inventory is moved into the location. This is used for warehouses with certain number of locations. However, the usage of locations is phased out over a period of time.</xsd:documentation>
            </xsd:annotation>
        </xsd:attribute>
        <xsd:attribute name="FreezeMoveOut" type="yfctype:Flag" use="optional">
            <xsd:annotation yfc:columnName="FREEZE_MOVE_OUT" yfc:tableName="YFS_LOCATION">
                <xsd:documentation>
                    <div>
                    If <code>
                            <b>Y</b>
                        </code>, no inventory is moved out of the location. If passed, inventory on the locations with matching value of <code>FreezeMoveOut</code> is returned.
                    </div>
                </xsd:documentation>
            </xsd:annotation>
        </xsd:attribute>
        <xsd:attribute name="FreezeOnVariance" type="yfctype:Flag" use="optional">
            <xsd:annotation yfc:columnName="FREEZE_ON_VARIANCE" yfc:tableName="YFS_TRAN_LOCN_ATTRS">
                <xsd:documentation>This flag indicates whether the location has an item with negative variance that was detected during the count operation. This determines whether a pick or putaway operation can be performed in the location.</xsd:documentation>
            </xsd:annotation>
        </xsd:attribute>
        <xsd:attribute name="IncludeInventoryFromConsumableInvOrgs"
            type="yfctype:Flag" use="optional">
            <xsd:annotation>
                <xsd:documentation>Specifies if the output should include the inventory from consumable inventory organizations also. If passed as Y, the api gets inventory from inventory organizations associated to the enterprise(YFS_INV_ORG_RELATIONSHIP).</xsd:documentation>
            </xsd:annotation>
        </xsd:attribute>
        <xsd:attribute name="LocationId" type="yfctype:LocationId" use="optional">
            <xsd:annotation yfc:columnName="LOCATION_ID" yfc:tableName="YFS_LOCATION">
                <xsd:documentation>
                    <div>
                    Location Identifier. Forms unique key of this table in conjunction with <code>NODE_KEY</code>. If passed, then inventory on the location is returned.
                    </div>
                </xsd:documentation>
            </xsd:annotation>
        </xsd:attribute>
        <xsd:attribute name="MaximumRecords" type="yfctype:Count" use="optional">
            <xsd:annotation>
                <xsd:documentation>Specifies maximum number of records that must be fetched. If passed, the total list of inventory records selected is limited to the input.</xsd:documentation>
            </xsd:annotation>
        </xsd:attribute>
        <xsd:attribute name="Node" type="yfctype:Key" use="required">
            <xsd:annotation yfc:columnName="NODE_KEY" yfc:tableName="YFS_LOCATION">
                <xsd:documentation>
                    <div>
                    Node for which the inventory has to be searched.
                        <Validation>
                            <Condition>
                                <code>Node</code> must be passed.
                            </Condition>
                            <Error Description="Node not passed." ErrorCode="WMS00054"/>
                        </Validation>
                    </div>
                </xsd:documentation>
            </xsd:annotation>
        </xsd:attribute>
        <xsd:attribute name="ZoneId" type="yfctype:ZoneId" use="optional">
            <xsd:annotation yfc:columnName="ZONE_ID" yfc:tableName="YFS_LOCATION">
                <xsd:documentation>
                    <div>
                    Zone to which a location belongs. This in conjunction with the node key identifies a unique zone within the node. If passed, then inventory on the zone is returned.
                    </div>
                </xsd:documentation>
            </xsd:annotation>
        </xsd:attribute>
    </xsd:complexType>
    <xsd:element name="Inventory">
        <xsd:annotation yfc:tableName="YFS_LOCATION_INVENTORY">
            <xsd:documentation>Non-license plated inventory is tracked using this table.</xsd:documentation>
        </xsd:annotation>
        <xsd:complexType>
            <xsd:all>
                <xsd:element maxOccurs="1" minOccurs="0" ref="yfc:Receipt"/>
                <xsd:element maxOccurs="1" minOccurs="0" ref="yfc:InventoryItem"/>
                <xsd:element maxOccurs="1" minOccurs="0" ref="yfc:TagDetail"/>
                <xsd:element maxOccurs="1" minOccurs="0" ref="yfc:SerialList"/>
            </xsd:all>
            <xsd:attribute name="CaseId" type="yfctype:LPNNo" use="optional">
                <xsd:annotation>
                    <xsd:documentation>
                        <div>
                        A CaseId for which details have to be returned.
                            <Validation>
                                <Condition>Both <code>CaseId</code> and <code>PalletId</code> cannot be passed. Error if both <code>CaseId</code> and <code>PalletId</code> are given.
                                </Condition>
                                <Error
                                    Description="Only One of Case/Pallet Can Be Used." ErrorCode="WMS00028"/>
                            </Validation>
                        </div>
                    </xsd:documentation>
                </xsd:annotation>
            </xsd:attribute>
            <xsd:attribute name="CountryOfOrigin" type="yfctype:Country" use="optional">
                <xsd:annotation yfc:columnName="COUNTRY_OF_ORIGIN" yfc:tableName="YFS_LOCATION_INVENTORY">
                    <xsd:documentation>
                        <div>
                        Country in which the item was manufactured. If passed, then, only the inventory with matching <code>CountryOfOrigin</code> is returned.
                        </div>
                    </xsd:documentation>
                </xsd:annotation>
            </xsd:attribute>
            <xsd:attribute name="FifoNo" type="yfctype:Integer" use="optional">
                <xsd:annotation yfc:columnName="FIFO_NO" yfc:tableName="YFS_LOCATION_INVENTORY">
                    <xsd:documentation>
                        <div>
                        FIFO number is a date based inventory attribute that helps understand the order in which stock arrived at the node. This is used to send out items that arrived first than the ones that arrived later. If passed, then, only inventory satisfying the <code>FifoNo</code> is returned.
                        </div>
                    </xsd:documentation>
                </xsd:annotation>
            </xsd:attribute>
            <xsd:attribute name="InventoryItemKey" type="yfctype:Key" use="optional">
                <xsd:annotation yfc:columnName="INVENTORY_ITEM_KEY" yfc:tableName="YFS_LOCATION_INVENTORY">
                    <xsd:documentation>
                        <div>
                        Primary Key attribute of <code>YFS_INVENTORY_ITEM</code> table. Points to a SKU that comprises the Inventory Organization, Item ID, Product Class and Unit of Measure. If passed, then, only inventory with matching <code>InventoryItemKey</code> is returned.
                        </div>
                    </xsd:documentation>
                </xsd:annotation>
            </xsd:attribute>
            <xsd:attribute name="InventoryStatus"
                type="yfctype:InventoryStatus" use="optional">
                <xsd:annotation yfc:columnName="INVENTORY_STATUS" yfc:tableName="YFS_LOCATION_INVENTORY">
                    <xsd:documentation>
                        <div>
                        Unique key of <code>YFS_INVENTORY_STATUS</code> table. Refers to an inventory sub classification based on the results of the inventory control processes within the warehouse. If passed, then, only inventory with matching <code>InventoryStatus</code> is returned.
                        </div>
                    </xsd:documentation>
                </xsd:annotation>
            </xsd:attribute>
            <xsd:attribute name="InventoryTagKey" type="yfctype:Key" use="optional">
                <xsd:annotation yfc:columnName="INVENTORY_TAG_KEY" yfc:tableName="YFS_LOCATION_INVENTORY">
                    <xsd:documentation>
                        <div>
                        Primary Key attribute of <code>YFS_INVENTORY_TAG</code> table. Points to lot and related attributes (revision etc) for the item whose inventory is tracked here. If passed, then, only inventory with matching <code>InventoryTagKey</code> is returned.
                        </div>
                    </xsd:documentation>
                </xsd:annotation>
            </xsd:attribute>
            <xsd:attribute name="PalletId" type="yfctype:LPNNo" use="optional">
                <xsd:annotation>
                    <xsd:documentation>
                        <div>
                        A PalletId for which details have to be returned.
                            <Validation>
                                <Condition>Both <code>CaseId</code> and <code>PalletId</code> cannot be passed. Error if both <code>CaseId</code> and <code>PalletId</code> are given.
                                </Condition>
                                <Error
                                    Description="Only One of Case/Pallet Can Be Used." ErrorCode="WMS00028"/>
                            </Validation>
                        </div>
                    </xsd:documentation>
                </xsd:annotation>
            </xsd:attribute>
            <xsd:attribute name="ReceiptHeaderKey" type="yfctype:Key" use="optional">
                <xsd:annotation yfc:columnName="RECEIPT_HEADER_KEY" yfc:tableName="YFS_LOCATION_INVENTORY">
                    <xsd:documentation>
                        <div>
                        Helps identify all stock attached to a receipt. This number is of significance until the sample from the receipt has been certified as having passed or failed QC. This number is used to pull out all stock based on the receipt. This is the primary key of the <code>YFS_RECEIPT_HEADER</code> table. If passed, then, only the inventory with matching <code>ReceiptHeaderKey</code> is returned.
                        </div>
                    </xsd:documentation>
                </xsd:annotation>
            </xsd:attribute>
            <xsd:attribute name="Segment" type="yfctype:Segment" use="optional">
                <xsd:annotation yfc:columnName="SEGMENT" yfc:tableName="YFS_LOCATION_INVENTORY">
                    <xsd:documentation>
                        <div>
                        When inventory is customized for a specific order, it needs to be tracked separately so that it can be allocated to that order. If passed, then, only inventory belonging to the <code>Segment</code> is returned.
                        </div>
                    </xsd:documentation>
                </xsd:annotation>
            </xsd:attribute>
            <xsd:attribute name="SegmentType" type="yfctype:SegmentType" use="optional">
                <xsd:annotation yfc:columnName="SEGMENT_TYPE" yfc:tableName="YFS_LOCATION_INVENTORY">
                    <xsd:documentation>
                        <div>
                        When inventory is customized, it needs to be tracked separately. This field indicates the buyer or buyer category for who the inventory is customized. If passed, then, only inventory belonging to the <code>SegmentType</code> is returned.
                        </div>
                    </xsd:documentation>
                </xsd:annotation>
            </xsd:attribute>
            <xsd:attribute name="ShipByDate" type="yfctype:Date" use="optional">
                <xsd:annotation yfc:columnName="SHIP_BY_DATE" yfc:tableName="YFS_LOCATION_INVENTORY">
                    <xsd:documentation>
                        <div>
                        Date by which the item must be shipped so that it is usable. This is also referred to as the expiration date. If passed, then, only inventory satisfying the <code>ShipByDate</code> is returned.
                        </div>
                    </xsd:documentation>
                </xsd:annotation>
            </xsd:attribute>
        </xsd:complexType>
    </xsd:element>
    <xsd:element name="Receipt">
        <xsd:annotation yfc:tableName="YFS_RECEIPT_HEADER">
            <xsd:documentation>Stores receipt information. A receipt is a collection of receipt lines which are received against a shipment or order or order release.</xsd:documentation>
        </xsd:annotation>
        <xsd:complexType>
            <xsd:attribute name="InventoryAge" type="yfctype:Integer" use="optional">
                <xsd:annotation>
                    <xsd:documentation>The Age Of The Inventory calculated from the ReceiptDate. If passed, then, ReceiptDate is computed as Current Date - <code>InventoryAge</code> and inventory satisfying the ReceiptDate is returned. </xsd:documentation>
                </xsd:annotation>
            </xsd:attribute>
            <xsd:attribute name="ReceiptNo" type="yfctype:ReceiptNo" use="optional">
                <xsd:annotation yfc:columnName="RECEIPT_NO" yfc:tableName="YFS_RECEIPT_HEADER">
                    <xsd:documentation>Unique key or business key, which by itself identifies a receipt along with ReceivingNode. If passed, then, Inventory belonging to the receipt is returned.</xsd:documentation>
                </xsd:annotation>
            </xsd:attribute>
        </xsd:complexType>
    </xsd:element>
    <xsd:element name="InventoryItem">
        <xsd:annotation yfc:tableName="YFS_INVENTORY_ITEM">
            <xsd:documentation>This table stores definitions for all inventory items.</xsd:documentation>
        </xsd:annotation>
        <xsd:complexType>
            <xsd:attribute name="ItemID" type="yfctype:ItemID" use="optional">
                <xsd:annotation yfc:columnName="ITEM_ID" yfc:tableName="YFS_INVENTORY_ITEM">
                    <xsd:documentation>
                        <div>
                        Item identity for the inventory.
                        </div>
                    </xsd:documentation>
                </xsd:annotation>
            </xsd:attribute>
            <xsd:attribute name="ProductClass"
                type="yfctype:ProductClass" use="optional">
                <xsd:annotation yfc:columnName="PRODUCT_CLASS" yfc:tableName="YFS_INVENTORY_ITEM">
                    <xsd:documentation>
                        <div>
                        Gives the ProductClass for the item.
                        </div>
                    </xsd:documentation>
                </xsd:annotation>
            </xsd:attribute>
            <xsd:attribute name="UnitOfMeasure" type="yfctype:UOM" use="optional">
                <xsd:annotation yfc:columnName="UOM" yfc:tableName="YFS_INVENTORY_ITEM">
                    <xsd:documentation>
                        <div>
                        Unit of measure for the item.
                        </div>
                    </xsd:documentation>
                </xsd:annotation>
            </xsd:attribute>
        </xsd:complexType>
    </xsd:element>
    <xsd:element name="TagDetail">
        <xsd:annotation yfc:tableName="YFS_INVENTORY_TAG">
            <xsd:documentation>This table stores tag information for inventory.</xsd:documentation>
        </xsd:annotation>
        <xsd:complexType>
            <xsd:attribute name="BatchNo" type="yfctype:Text-40" use="optional">
                <xsd:annotation yfc:columnName="BATCH_NO" yfc:tableName="YFS_INVENTORY_TAG">
                    <xsd:documentation>Batch Number.</xsd:documentation>
                </xsd:annotation>
            </xsd:attribute>
            <xsd:attribute name="LotAttribute1" type="yfctype:Text-40" use="optional">
                <xsd:annotation yfc:columnName="LOT_ATTRIBUTE1" yfc:tableName="YFS_INVENTORY_TAG">
                    <xsd:documentation>Any other lot attribute.</xsd:documentation>
                </xsd:annotation>
            </xsd:attribute>
            <xsd:attribute name="LotAttribute2" type="yfctype:Text-40" use="optional">
                <xsd:annotation yfc:columnName="LOT_ATTRIBUTE2" yfc:tableName="YFS_INVENTORY_TAG">
                    <xsd:documentation>Any other lot attribute.</xsd:documentation>
                </xsd:annotation>
            </xsd:attribute>
            <xsd:attribute name="LotAttribute3" type="yfctype:Text-40" use="optional">
                <xsd:annotation yfc:columnName="LOT_ATTRIBUTE3" yfc:tableName="YFS_INVENTORY_TAG">
                    <xsd:documentation>Any other lot attribute.</xsd:documentation>
                </xsd:annotation>
            </xsd:attribute>
            <xsd:attribute name="LotKeyReference"
                type="yfctype:Text-4000" use="optional">
                <xsd:annotation yfc:columnName="LOT_KEY_REFERENCE" yfc:tableName="YFS_INVENTORY_TAG">
                    <xsd:documentation>Stores reference information of the lot number.</xsd:documentation>
                </xsd:annotation>
            </xsd:attribute>
            <xsd:attribute name="LotNumber" type="yfctype:Text-40" use="optional">
                <xsd:annotation yfc:columnName="LOT_NUMBER" yfc:tableName="YFS_INVENTORY_TAG">
                    <xsd:documentation>Lot Number.</xsd:documentation>
                </xsd:annotation>
            </xsd:attribute>
            <xsd:attribute name="ManufacturingDate" use="optional">
                <xsd:annotation yfc:columnName="LOT_MANUFACTURE_DATE" yfc:tableName="YFS_INVENTORY_TAG">
                    <xsd:documentation>Lot Manufacturing Date.</xsd:documentation>
                </xsd:annotation>
                <xsd:simpleType>
                    <xsd:union>
                        <xsd:simpleType>
                            <xsd:restriction base="yfctype:Date"/>
                        </xsd:simpleType>
                        <xsd:simpleType>
                            <xsd:restriction base="xsd:string">
                                <xsd:enumeration value=""/>
                            </xsd:restriction>
                        </xsd:simpleType>
                    </xsd:union>
                </xsd:simpleType>
            </xsd:attribute>
            <xsd:attribute name="RevisionNo" type="yfctype:Text-40" use="optional">
                <xsd:annotation yfc:columnName="REVISION_NO" yfc:tableName="YFS_INVENTORY_TAG">
                    <xsd:documentation>Revision Number.</xsd:documentation>
                </xsd:annotation>
            </xsd:attribute>
        </xsd:complexType>
    </xsd:element>
    <xsd:element name="SerialList">
        <xsd:complexType>
            <xsd:all>
                <xsd:element maxOccurs="1" minOccurs="1" ref="yfc:SerialDetail"/>
            </xsd:all>
        </xsd:complexType>
    </xsd:element>
    <xsd:element name="SerialDetail">
        <xsd:annotation yfc:tableName="YFS_GLOBAL_SERIAL_NUM">
            <xsd:documentation>This table stores details about serial numbers. Since serial number scanning is an overhead if it has to be done at every single move operation in the warehouse for tracking purposes, warehouses typically just record the fact that the serial number has reached the warehouse during the receiving process. Similarly, the serial number is scanned at shipping to record the fact that the serial number has left the warehouse. So, the location at any time is the last location at which it was scanned. Similarly, the ship node on the serial number will reflect the ship node at which it was last scanned.</xsd:documentation>
        </xsd:annotation>
        <xsd:complexType>
            <xsd:attribute name="SecondarySerial1"
                type="yfctype:SerialNo" use="optional">
                <xsd:annotation yfc:columnName="SECONDARY_SERIAL_1" yfc:tableName="YFS_GLOBAL_SERIAL_NUM">
                    <xsd:documentation>
                        <div>
                                    Component serial numbers of the item. For example if we are recording serial number of the computer as <code>SERIAL_NO</code>, we could store the serial number of the battery, hard disk etc. in the secondary serial fields. If passed, used to uniquely identify secondary serial within the serial.
                                    </div>
                    </xsd:documentation>
                </xsd:annotation>
            </xsd:attribute>
            <xsd:attribute name="SecondarySerial2"
                type="yfctype:SerialNo" use="optional">
                <xsd:annotation yfc:columnName="SECONDARY_SERIAL_2" yfc:tableName="YFS_GLOBAL_SERIAL_NUM">
                    <xsd:documentation>
                        <div>
                                    Component serial numbers of the item. For example if we are recording serial number of the computer as <code>SERIAL_NO</code>, we could store the serial number of the battery, hard disk etc. in the secondary serial fields. If passed, used to uniquely identify secondary serial within the serial.
                                    </div>
                    </xsd:documentation>
                </xsd:annotation>
            </xsd:attribute>
            <xsd:attribute name="SecondarySerial3"
                type="yfctype:SerialNo" use="optional">
                <xsd:annotation yfc:columnName="SECONDARY_SERIAL_3" yfc:tableName="YFS_GLOBAL_SERIAL_NUM">
                    <xsd:documentation>
                        <div>
                                    Component serial numbers of the item. For example if we are recording serial number of the computer as <code>SERIAL_NO</code>, we could store the serial number of the battery, hard disk etc. in the secondary serial fields. If passed, used to uniquely identify secondary serial within the serial.
                                    </div>
                    </xsd:documentation>
                </xsd:annotation>
            </xsd:attribute>
            <xsd:attribute name="SecondarySerial4"
                type="yfctype:SerialNo" use="optional">
                <xsd:annotation yfc:columnName="SECONDARY_SERIAL_4" yfc:tableName="YFS_GLOBAL_SERIAL_NUM">
                    <xsd:documentation>
                        <div>
                                    Component serial numbers of the item. For example if we are recording serial number of the computer as <code>SERIAL_NO</code>, we could store the serial number of the battery, hard disk etc. in the secondary serial fields. If passed, used to uniquely identify secondary serial within the serial.
                                    </div>
                    </xsd:documentation>
                </xsd:annotation>
            </xsd:attribute>
            <xsd:attribute name="SecondarySerial5"
                type="yfctype:SerialNo" use="optional">
                <xsd:annotation yfc:columnName="SECONDARY_SERIAL_5" yfc:tableName="YFS_GLOBAL_SERIAL_NUM">
                    <xsd:documentation>
                        <div>
                                    Component serial numbers of the item. For example if we are recording serial number of the computer as <code>SERIAL_NO</code>, we could store the serial number of the battery, hard disk etc. in the secondary serial fields. If passed, used to uniquely identify secondary serial within the serial.
                                    </div>
                    </xsd:documentation>
                </xsd:annotation>
            </xsd:attribute>
            <xsd:attribute name="SecondarySerial6"
                type="yfctype:SerialNo" use="optional">
                <xsd:annotation yfc:columnName="SECONDARY_SERIAL_6" yfc:tableName="YFS_GLOBAL_SERIAL_NUM">
                    <xsd:documentation>
                        <div>
                                    Component serial numbers of the item. For example if we are recording serial number of the computer as <code>SERIAL_NO</code>, we could store the serial number of the battery, hard disk etc. in the secondary serial fields. If passed, used to uniquely identify secondary serial within the serial.
                                    </div>
                    </xsd:documentation>
                </xsd:annotation>
            </xsd:attribute>
            <xsd:attribute name="SecondarySerial7"
                type="yfctype:SerialNo" use="optional">
                <xsd:annotation yfc:columnName="SECONDARY_SERIAL_7" yfc:tableName="YFS_GLOBAL_SERIAL_NUM">
                    <xsd:documentation>
                        <div>
                                    Component serial numbers of the item. For example if we are recording serial number of the computer as <code>SERIAL_NO</code>, we could store the serial number of the battery, hard disk etc. in the secondary serial fields. If passed, used to uniquely identify secondary serial within the serial.
                                    </div>
                    </xsd:documentation>
                </xsd:annotation>
            </xsd:attribute>
            <xsd:attribute name="SecondarySerial8"
                type="yfctype:SerialNo" use="optional">
                <xsd:annotation yfc:columnName="SECONDARY_SERIAL_8" yfc:tableName="YFS_GLOBAL_SERIAL_NUM">
                    <xsd:documentation>
                        <div>
                                    Component serial numbers of the item. For example if we are recording serial number of the computer as <code>SERIAL_NO</code>, we could store the serial number of the battery, hard disk etc. in the secondary serial fields. If passed, used to uniquely identify secondary serial within the serial.
                                    </div>
                    </xsd:documentation>
                </xsd:annotation>
            </xsd:attribute>
            <xsd:attribute name="SecondarySerial9"
                type="yfctype:SerialNo" use="optional">
                <xsd:annotation yfc:columnName="SECONDARY_SERIAL_9" yfc:tableName="YFS_GLOBAL_SERIAL_NUM">
                    <xsd:documentation>
                        <div>
                                    Component serial numbers of the item. For example if we are recording serial number of the computer as <code>SERIAL_NO</code>, we could store the serial number of the battery, hard disk etc. in the secondary serial fields. If passed, used to uniquely identify secondary serial within the serial.
                                    </div>
                    </xsd:documentation>
                </xsd:annotation>
            </xsd:attribute>
            <xsd:attribute name="SerialNo" type="yfctype:SerialNo" use="optional">
                <xsd:annotation yfc:columnName="SERIAL_NO" yfc:tableName="YFS_GLOBAL_SERIAL_NUM">
                    <xsd:documentation>
                        <div>
                                    Serial number of the item. This is expected to be unique across items. If passed, used to uniquely identify the serial.
                                    </div>
                    </xsd:documentation>
                </xsd:annotation>
            </xsd:attribute>
        </xsd:complexType>
    </xsd:element>
    <xsd:element name="Zones">
        <xsd:complexType>
            <xsd:all>
                <xsd:element maxOccurs="1" minOccurs="0" ref="yfc:Zone"/>
            </xsd:all>
        </xsd:complexType>
    </xsd:element>
    <xsd:element name="Zone">
        <xsd:annotation yfc:tableName="YFS_ZONE">
            <xsd:documentation>This table stores the zone level setup details for a warehouse. The warehouse may be divided into multiple zones based on the product storage, packaging types, etc. Zone is a way of classifying a set of locations that share common properties. Locations belong to zones. Zone level storage constraints are auto propagated to locations through membership in a zone. The mix and do not mix constraints at zone level, apply to every single location in the zone.</xsd:documentation>
        </xsd:annotation>
        <xsd:complexType>
            <xsd:attribute name="ZoneId" type="yfctype:ZoneId" use="optional">
                <xsd:annotation yfc:columnName="ZONE_ID" yfc:tableName="YFS_ZONE">
                    <xsd:documentation>The field indicates the zone identifier. This forms a unique key for the YFS_ZONE table associated with the NODE_KEY.</xsd:documentation>
                </xsd:annotation>
            </xsd:attribute>
        </xsd:complexType>
    </xsd:element>
    <xsd:element name="DataAccessFilter">
        <xsd:complexType>
            <xsd:attribute name="ApplyDataSecurityFilters"
                type="yfctype:Text-1" use="optional">
                <xsd:annotation>
                    <xsd:documentation>
                        <div>
                        Default: <b>
                                <code>N</code>
                            </b>
                            <br/>Valid Values:
                        <br/>
                            <b>
                                <code>Y</code>
                            </b> - Returns records by honoring the Data Security Groups.
                        <br/>
                            <b>
                                <code>N</code>
                            </b> - Returns records by ignoring the Data Security Groups.
                        </div>
                    </xsd:documentation>
                </xsd:annotation>
            </xsd:attribute>
        </xsd:complexType>
    </xsd:element>
</xsd:schema>
