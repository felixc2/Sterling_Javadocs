<?xml version="1.0" encoding="UTF-8"?>
<xsd:schema attributeFormDefault="unqualified"
    elementFormDefault="qualified"
    targetNamespace="http://www.sterlingcommerce.com/documentation/YSC/manageValidation/input"
    xmlns:xsd="http://www.w3.org/2001/XMLSchema"
    xmlns:yfc="http://www.sterlingcommerce.com/documentation/YSC/manageValidation/input" xmlns:yfctype="http://www.sterlingcommerce.com/documentation/types">
    <xsd:annotation yfc:fileName="YSC_manageValidation_input.xsd" yfc:rootElement="Validation">
        <xsd:appinfo source="yfc:structure">
            <Validation hasAttributes="Y">
                <PreDefinedGreexRule/>
                <DataCapture/>
                <ValidationReferenceList>
                    <ValidationReference hasAttributes="Y"/>
                </ValidationReferenceList>
            </Validation>
        </xsd:appinfo>
    </xsd:annotation>
    <xsd:import
        namespace="http://www.sterlingcommerce.com/documentation/types" schemaLocation="datatypes.xsd"/>
    <xsd:element name="Validation" type="yfc:ValidationXSDType">
        <xsd:annotation yfc:tableName="YFS_VALIDATION">
            <xsd:documentation>This table stores the configuration for a validation</xsd:documentation>
        </xsd:annotation>
    </xsd:element>
    <xsd:complexType name="ValidationXSDType">
        <xsd:all>
            <xsd:element maxOccurs="1" minOccurs="1" ref="yfc:PreDefinedGreexRule"/>
            <xsd:element maxOccurs="1" minOccurs="1" ref="yfc:DataCapture"/>
            <xsd:element maxOccurs="1" minOccurs="0" ref="yfc:ValidationReferenceList"/>
        </xsd:all>
        <xsd:attribute name="Action" type="yfctype:Action" use="optional">
            <xsd:annotation>
                <xsd:documentation>
                    <div>The operation to perform on this record. Valid values are listed below.
				        <br/>Valid Values:<br/>
                        <code>Manage</code> - Create if the data is not found, otherwise modify. This is default<br/>
                        <code>Create</code> - Create a new Validation.<br/>
                        <code>Modify</code> - Modify an existing Validation.<br/>
                        <code>Delete</code> - Delete an existing record.
                       <Validation>
                            <Condition>Validation being created or updated must have valid OrganizationCode,ValidationID, Domain, ViolationEntity and Input template.
								<br/>Validation of type SIMPLE or COMPLEX must have PreDefinedGreexRule and DataCapture. 
							    <br/>Validation of type NONE must have ExternalInitPerform flag set to Y and should not have PreDefinedGreexRule and DataCapture. 
							</Condition>
                            <Error
                                Description="Validation cannot be created, updated or deleted." ErrorCode="OMP92_0008"/>
                        </Validation>
                        <Validation>
                            <Condition>System defined validation cannot be updated or deleted using this API.
							</Condition>
                            <Error
                                Description="System defined validation cannot be updated or deleted." ErrorCode="OMP921_0010"/>
                        </Validation>
                    </div>
                </xsd:documentation>
            </xsd:annotation>
        </xsd:attribute>
        <xsd:attribute name="CanApprovalBePostponed" type="yfctype:Flag" use="optional">
            <xsd:annotation yfc:columnName="APPROVAL_POSTPONABLE" yfc:tableName="YFS_VALIDATION">
                <xsd:documentation>The flag indicates if the transaction violation can be approved at a later point of time. If it is marked as (N), then violation has to be approved before operator can proceed with the transaction.</xsd:documentation>
            </xsd:annotation>
        </xsd:attribute>
        <xsd:attribute name="ConfigurationGroup" type="yfctype:Text-40" use="required">
            <xsd:annotation yfc:columnName="CONFIGURATION_GROUP" yfc:tableName="YFS_VALIDATION">
                <xsd:documentation>
                    <div>The configuration group that identifies the Base Config Group Definition that should be used searching for applicable rules on this Validation.
				    	<Validation>
                            <Condition> Validation being created or updated must have a valid ConfigurationGroup. The value passed must be present as a GroupName on a record in the YFS_Base_Config_Grp_Defn table.
				    		</Condition>
                            <Error
                                Description="Invalid Configuration Group." ErrorCode="OMP921_MO004"/>
                        </Validation>
                    </div>
                </xsd:documentation>
            </xsd:annotation>
        </xsd:attribute>
        <xsd:attribute name="Description" type="yfctype:Text-100" use="optional">
            <xsd:annotation yfc:columnName="DESCRIPTION" yfc:tableName="YFS_VALIDATION">
                <xsd:documentation>The description of the validation.</xsd:documentation>
            </xsd:annotation>
        </xsd:attribute>
        <xsd:attribute name="Domain" type="yfctype:Text-100" use="required">
            <xsd:annotation yfc:columnName="DOMAIN" yfc:tableName="YFS_VALIDATION">
                <xsd:documentation>The validation domain for this configuration.</xsd:documentation>
            </xsd:annotation>
        </xsd:attribute>
        <xsd:attribute name="ErrorCode" type="yfctype:Text-24" use="optional">
            <xsd:annotation yfc:columnName="ERROR_CODE" yfc:tableName="YFS_VALIDATION">
                <xsd:documentation>This specifies the error code that needs to thrown in case validation fails.</xsd:documentation>
            </xsd:annotation>
        </xsd:attribute>
        <xsd:attribute name="ExternalInitPerform" type="yfctype:Flag" use="optional">
            <xsd:annotation yfc:columnName="EXTERNAL_INIT_PERFORM" yfc:tableName="YFS_VALIDATION">
                <xsd:documentation>The flag indicates that the initial validation is done outside of the framework..</xsd:documentation>
            </xsd:annotation>
        </xsd:attribute>
        <xsd:attribute name="InputTemplate" type="yfctype:DocumentType" use="required">
            <xsd:annotation yfc:columnName="INPUT_TEMPLATE" yfc:tableName="YFS_VALIDATION">
                <xsd:documentation>
                    <div> This is the name identifier of the input XML template that will be used  for creating input data to be passed to validation condition. The input XML template needs to created before creating the validation. 
					</div>
                </xsd:documentation>
            </xsd:annotation>
        </xsd:attribute>
        <xsd:attribute name="IsApprovalRequiredOnReoccurence"
            type="yfctype:Flag" use="optional">
            <xsd:annotation yfc:columnName="REAPPROVAL_REQUIRED" yfc:tableName="YFS_VALIDATION">
                <xsd:documentation>This flag specifies if each transaction violation for this validation needs to be approved or not.</xsd:documentation>
            </xsd:annotation>
        </xsd:attribute>
        <xsd:attribute name="IsOverridable" type="yfctype:Flag" use="optional">
            <xsd:annotation yfc:columnName="IS_OVERRIDABLE" yfc:tableName="YFS_VALIDATION">
                <xsd:documentation>This flag indicates that the validation can be overridden by overridden rules.</xsd:documentation>
            </xsd:annotation>
        </xsd:attribute>
        <xsd:attribute name="IsUserExitActive" type="yfctype:Flag" use="optional">
            <xsd:annotation yfc:columnName="IS_USER_EXIT_ACTIVE" yfc:tableName="YFS_VALIDATION">
                <xsd:documentation>This flag indicates that  user exit for the validation is active or not.</xsd:documentation>
            </xsd:annotation>
        </xsd:attribute>
        <xsd:attribute name="ModelTemplate" type="yfctype:DocumentType" use="optional">
            <xsd:annotation yfc:columnName="MODEL_TEMPLATE" yfc:tableName="YFS_VALIDATION">
                <xsd:documentation>The model template is used in SBC for showing appropriate model in Approval Rule creation screens</xsd:documentation>
            </xsd:annotation>
        </xsd:attribute>
        <xsd:attribute name="OrganizationCode" type="yfctype:OrgCode" use="required">
            <xsd:annotation yfc:columnName="ORGANIZATION_CODE" yfc:tableName="YFS_VALIDATION">
                <xsd:documentation>The organization for which the validation belongs.</xsd:documentation>
            </xsd:annotation>
        </xsd:attribute>
        <xsd:attribute name="ValidationID" type="yfctype:ID-40" use="required">
            <xsd:annotation yfc:columnName="VALIDATION_ID" yfc:tableName="YFS_VALIDATION">
                <xsd:documentation>The unique identifier for the VALIDATION.</xsd:documentation>
            </xsd:annotation>
        </xsd:attribute>
        <xsd:attribute name="ValidationKey" type="yfctype:Key" use="optional">
            <xsd:annotation yfc:columnName="VALIDATION_KEY" yfc:tableName="YFS_VALIDATION">
                <xsd:documentation>The primary key of the YFS_VALIDATION table.</xsd:documentation>
            </xsd:annotation>
        </xsd:attribute>
        <xsd:attribute name="ValidationType" type="yfctype:Text-10" use="optional">
            <xsd:annotation yfc:columnName="VALIDATION_TYPE" yfc:tableName="YFS_VALIDATION">
                <xsd:documentation>
                    <div>Type of the validation. Valid values are listed below.
				        <br/>Valid Values:<br/>
                        <code>NONE</code> -Indicates that the validation logic is done in the business logic outside of the framework. ExternalInitPerform attribute should be set to Y. <br/>
                        <code>SIMPLE</code> -Indicates that the validation is a simple logic with PreDefinedGreexRule and DataCapture.<br/>
                        <code>COMPLEX</code>-Indicates that the validation can be a complex logic. UI will have Greex condition builder to create custom validation condition if PreDefinedGreexRule is not sufficient.
                   	</div>
                </xsd:documentation>
            </xsd:annotation>
        </xsd:attribute>
        <xsd:attribute name="ViolationEntity" type="yfctype:Text-100" use="required">
            <xsd:annotation yfc:columnName="VIOLATION_ENTITY" yfc:tableName="YFS_VALIDATION">
                <xsd:documentation>This specifies the violation entity for storing the violations and approver information.</xsd:documentation>
            </xsd:annotation>
        </xsd:attribute>
    </xsd:complexType>
    <xsd:element name="PreDefinedGreexRule">
        <xsd:annotation>
            <xsd:documentation>
                <div>
	               			The Greex format advanced XML condition associated with this validation.
	                   </div>
            </xsd:documentation>
        </xsd:annotation>
        <xsd:complexType>
            <xsd:sequence>
                <xsd:any maxOccurs="unbounded" minOccurs="0" processContents="skip"/>
            </xsd:sequence>
        </xsd:complexType>
    </xsd:element>
    <xsd:element name="DataCapture">
        <xsd:annotation>
            <xsd:documentation>
                <div>
               			The data for the assocciated Greex condition for this validation.
                   </div>
            </xsd:documentation>
        </xsd:annotation>
        <xsd:complexType>
            <xsd:sequence>
                <xsd:any maxOccurs="unbounded" minOccurs="0" processContents="skip"/>
            </xsd:sequence>
        </xsd:complexType>
    </xsd:element>
    <xsd:element name="ValidationReferenceList">
        <xsd:complexType>
            <xsd:sequence>
                <xsd:element maxOccurs="unbounded" minOccurs="0" ref="yfc:ValidationReference"/>
            </xsd:sequence>
        </xsd:complexType>
    </xsd:element>
    <xsd:element name="ValidationReference">
        <xsd:annotation yfc:tableName="YFS_VALIDATION_REFERENCE">
            <xsd:documentation>
                <div>
               			The validation references for this validation.
                   </div>
            </xsd:documentation>
        </xsd:annotation>
        <xsd:complexType>
            <xsd:attribute name="DataType" type="yfctype:DocumentType" use="optional">
                <xsd:annotation yfc:columnName="DATA_TYPE" yfc:tableName="YFS_VALIDATION_REFERENCE">
                    <xsd:documentation>Species the data type of the reference value.</xsd:documentation>
                </xsd:annotation>
            </xsd:attribute>
            <xsd:attribute name="IsInformational" type="yfctype:Flag" use="optional">
                <xsd:annotation yfc:columnName="IS_INFORMATIONAL" yfc:tableName="YFS_VALIDATION_REFERENCE">
                    <xsd:documentation>The flag indicates whether or not the Reference is informational and should therefore not be used to differentiate one violation from another.</xsd:documentation>
                </xsd:annotation>
            </xsd:attribute>
            <xsd:attribute name="IsPrimaryReference" type="yfctype:Flag" use="optional">
                <xsd:annotation yfc:columnName="IS_PRIMARY_REFERENCE" yfc:tableName="YFS_VALIDATION_REFERENCE">
                    <xsd:documentation>The flag indicates whether or not the Reference is used to define the level at which the framework is invoked for the associated Validation.</xsd:documentation>
                </xsd:annotation>
            </xsd:attribute>
            <xsd:attribute name="ReferenceName"
                type="yfctype:DocumentType" use="optional">
                <xsd:annotation yfc:columnName="REFERENCE_NAME" yfc:tableName="YFS_VALIDATION_REFERENCE">
                    <xsd:documentation>Indicates the reference name for identifying the approval rule violation.</xsd:documentation>
                </xsd:annotation>
            </xsd:attribute>
        </xsd:complexType>
    </xsd:element>
</xsd:schema>
