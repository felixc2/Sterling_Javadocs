<?xml version="1.0" encoding="UTF-8"?>
<xsd:schema attributeFormDefault="unqualified"
    elementFormDefault="qualified"
    targetNamespace="http://www.sterlingcommerce.com/documentation/YCP/getTransactionList/output"
    xmlns:xsd="http://www.w3.org/2001/XMLSchema"
    xmlns:yfc="http://www.sterlingcommerce.com/documentation/YCP/getTransactionList/output" xmlns:yfctype="http://www.sterlingcommerce.com/documentation/types">
    <xsd:annotation yfc:fileName="YCP_getTransactionList_output.xsd" yfc:rootElement="TransactionList">
        <xsd:appinfo source="yfc:structure">
            <TransactionList>
                <Transaction hasAttributes="Y">
                    <PipelineListenerList hasAttributes="Y">
                        <PipelineListener hasAttributes="Y"/>
                    </PipelineListenerList>
                    <AgentCriteriaList hasAttributes="Y">
                        <AgentCriteria hasAttributes="Y">
                            <Flow hasAttributes="Y">
                                <UserExitImplList hasAttributes="Y">
                                    <UserExitImpl hasAttributes="Y"/>
                                </UserExitImplList>
                                <OrgDocumentList hasAttributes="Y">
                                    <OrgDocument hasAttributes="Y"/>
                                </OrgDocumentList>
                                <SubFlowList hasAttributes="Y">
                                    <SubFlow hasAttributes="Y"/>
                                </SubFlowList>
                                <InvokedFlowsList hasAttributes="Y">
                                    <InvokedFlows hasAttributes="Y"/>
                                </InvokedFlowsList>
                            </Flow>
                            <MessageXml>
                                <Attributes>
                                    <Attribute hasAttributes="Y"/>
                                </Attributes>
                            </MessageXml>
                        </AgentCriteria>
                    </AgentCriteriaList>
                    <TranFlowList hasAttributes="Y">
                        <TranFlow hasAttributes="Y"/>
                    </TranFlowList>
                    <PipelinePickupTranList hasAttributes="Y">
                        <PipelinePickupTran hasAttributes="Y"/>
                    </PipelinePickupTranList>
                    <TransactionPickupStatusList hasAttributes="Y">
                        <TransactionPickupStatus hasAttributes="Y"/>
                    </TransactionPickupStatusList>
                    <PipelineDefinitionList hasAttributes="Y">
                        <PipelineDefinition hasAttributes="Y"/>
                    </PipelineDefinitionList>
                    <TransactionDropStatusList hasAttributes="Y">
                        <TransactionDropStatus hasAttributes="Y"/>
                    </TransactionDropStatusList>
                    <EventList hasAttributes="Y">
                        <Event hasAttributes="Y">
                            <EventConditionList hasAttributes="Y">
                                <EventCondition hasAttributes="Y"/>
                            </EventConditionList>
                            <GraphUIList hasAttributes="Y">
                                <GraphUI hasAttributes="Y"/>
                            </GraphUIList>
                        </Event>
                    </EventList>
                </Transaction>
            </TransactionList>
        </xsd:appinfo>
    </xsd:annotation>
    <xsd:import
        namespace="http://www.sterlingcommerce.com/documentation/types" schemaLocation="datatypes.xsd"/>
    <xsd:element name="TransactionList" type="yfc:TransactionListXSDType"/>
    <xsd:complexType name="TransactionListXSDType">
        <xsd:sequence>
            <xsd:element maxOccurs="unbounded" minOccurs="0" ref="yfc:Transaction"/>
        </xsd:sequence>
    </xsd:complexType>
    <xsd:element name="Transaction">
        <xsd:annotation yfc:tableName="YFS_TRANSACTION">
            <xsd:documentation>This table stores transactions defined within the system.</xsd:documentation>
        </xsd:annotation>
        <xsd:complexType>
            <xsd:sequence>
                <xsd:element maxOccurs="unbounded" minOccurs="0" ref="yfc:PipelineListenerList"/>
                <xsd:element maxOccurs="unbounded" minOccurs="0" ref="yfc:AgentCriteriaList"/>
                <xsd:element maxOccurs="unbounded" minOccurs="0" ref="yfc:TranFlowList"/>
                <xsd:element maxOccurs="unbounded" minOccurs="0" ref="yfc:PipelinePickupTranList"/>
                <xsd:element maxOccurs="unbounded" minOccurs="0" ref="yfc:TransactionPickupStatusList"/>
                <xsd:element maxOccurs="unbounded" minOccurs="0" ref="yfc:PipelineDefinitionList"/>
                <xsd:element maxOccurs="unbounded" minOccurs="0" ref="yfc:TransactionDropStatusList"/>
                <xsd:element maxOccurs="unbounded" minOccurs="0" ref="yfc:EventList"/>
            </xsd:sequence>
            <xsd:attribute name="AgentJavaClass"
                type="yfctype:JavaClass" use="optional">
                <xsd:annotation yfc:columnName="AGENT_JAVA_CLASS" yfc:tableName="YFS_TRANSACTION">
                    <xsd:documentation>The java class used for consuming work flow messages being sent to a pipeline.</xsd:documentation>
                </xsd:annotation>
            </xsd:attribute>
            <xsd:attribute name="BaseProcessTypeListenedTo"
                type="yfctype:ProcessType-24" use="optional">
                <xsd:annotation
                    yfc:columnName="BASE_PROCESS_TYPE_LISTENED_TO" yfc:tableName="YFS_TRANSACTION">
                    <xsd:documentation>The base process type that the transaction listens to for status changes that may be needed to apply status changes to other entities.</xsd:documentation>
                </xsd:annotation>
            </xsd:attribute>
            <xsd:attribute name="BaseTransactionKey" type="yfctype:Key" use="optional">
                <xsd:annotation yfc:columnName="BASE_TRANSACTION_KEY" yfc:tableName="YFS_TRANSACTION">
                    <xsd:documentation>The base transaction that is associated with this transaction.</xsd:documentation>
                </xsd:annotation>
            </xsd:attribute>
            <xsd:attribute name="ChainedDocumentType"
                type="yfctype:DocumentType-24" use="optional">
                <xsd:annotation yfc:columnName="CHAINED_DOCUMENT_TYPE" yfc:tableName="YFS_TRANSACTION">
                    <xsd:documentation>The chained document type.</xsd:documentation>
                </xsd:annotation>
            </xsd:attribute>
            <xsd:attribute name="DerivedDocumentType"
                type="yfctype:DocumentType-24" use="optional">
                <xsd:annotation yfc:columnName="DERIVED_DOCUMENT_TYPE" yfc:tableName="YFS_TRANSACTION">
                    <xsd:documentation>The derived document type.</xsd:documentation>
                </xsd:annotation>
            </xsd:attribute>
            <xsd:attribute name="DerivedFromAbstract"
                type="yfctype:Flag" use="optional">
                <xsd:annotation yfc:columnName="DERIVED_FROM_ABSTRACT" yfc:tableName="YFS_TRANSACTION">
                    <xsd:documentation>This flag indicates whether the transaction is derived from an abstract transaction.</xsd:documentation>
                </xsd:annotation>
            </xsd:attribute>
            <xsd:attribute name="DropStatusFilter"
                type="yfctype:EnumDropStatusFilter" use="optional">
                <xsd:annotation yfc:columnName="DROP_STATUS_FILTER" yfc:tableName="YFS_TRANSACTION">
                    <xsd:documentation>This field indicates how drop statuses will be filtered.</xsd:documentation>
                </xsd:annotation>
            </xsd:attribute>
            <xsd:attribute name="ExternallyTriggerable"
                type="yfctype:Flag" use="optional">
                <xsd:annotation yfc:columnName="EXTERNALLY_TRIGGERABLE" yfc:tableName="YFS_TRANSACTION">
                    <xsd:documentation>This flag indicates whether this transaction is externally triggerable.</xsd:documentation>
                </xsd:annotation>
            </xsd:attribute>
            <xsd:attribute name="ExternallyTriggered"
                type="yfctype:Flag" use="optional">
                <xsd:annotation yfc:columnName="EXTERNALLY_TRIGGERED" yfc:tableName="YFS_TRANSACTION">
                    <xsd:documentation>This flag indicates whether the transaction is externally triggered.</xsd:documentation>
                </xsd:annotation>
            </xsd:attribute>
            <xsd:attribute name="IsManual" type="yfctype:Flag" use="optional">
                <xsd:annotation yfc:columnName="IS_MANUAL" yfc:tableName="YFS_TRANSACTION">
                    <xsd:documentation>This flag indicates whether this is a manual transaction requiring human intervention.</xsd:documentation>
                </xsd:annotation>
            </xsd:attribute>
            <xsd:attribute name="ListenerType"
                type="yfctype:EnumListenerType" use="optional">
                <xsd:annotation yfc:columnName="LISTENER_TYPE" yfc:tableName="YFS_TRANSACTION">
                    <xsd:documentation>This field indicates the type of the listener transaction. Each process type to process type combination consistutes a different listener type.</xsd:documentation>
                </xsd:annotation>
            </xsd:attribute>
            <xsd:attribute name="OperationLevel"
                type="yfctype:OperationLevel" use="optional">
                <xsd:annotation yfc:columnName="OPERATION_LEVEL" yfc:tableName="YFS_TRANSACTION">
                    <xsd:documentation>This is a common code and application defined. This column indicates the level at which the transaction operates. In specific applications, the operation level can be assigned at either the header or at line level of the transaction. When the header level operation is used, all lines associated to the header will be also be changed. On the other hand, if the operation is defined at the line level, only the specified line will be changed and its associated header will not be affected.</xsd:documentation>
                </xsd:annotation>
            </xsd:attribute>
            <xsd:attribute name="OwnerKey" type="yfctype:Key" use="optional">
                <xsd:annotation yfc:columnName="OWNER_KEY" yfc:tableName="YFS_TRANSACTION">
                    <xsd:documentation>The owner organization that is associated with this transaction.</xsd:documentation>
                </xsd:annotation>
            </xsd:attribute>
            <xsd:attribute name="PickStatusFilter"
                type="yfctype:EnumPickStatusFilter" use="optional">
                <xsd:annotation yfc:columnName="PICK_STATUS_FILTER" yfc:tableName="YFS_TRANSACTION">
                    <xsd:documentation>This field indicates how pickup statuses will be filtered.</xsd:documentation>
                </xsd:annotation>
            </xsd:attribute>
            <xsd:attribute name="PreDefined" type="yfctype:Flag" use="optional">
                <xsd:annotation yfc:columnName="PRE_DEFINED" yfc:tableName="YFS_TRANSACTION">
                    <xsd:documentation>This flag indicates whether the transaction is a predefined transaction.</xsd:documentation>
                </xsd:annotation>
            </xsd:attribute>
            <xsd:attribute name="ProcessTypeKey" type="yfctype:Key" use="optional">
                <xsd:annotation yfc:columnName="PROCESS_TYPE_KEY" yfc:tableName="YFS_TRANSACTION">
                    <xsd:documentation>The process type that is associated with this transaction.</xsd:documentation>
                </xsd:annotation>
            </xsd:attribute>
            <xsd:attribute name="RequiresChainedDocType"
                type="yfctype:Flag" use="optional">
                <xsd:annotation
                    yfc:columnName="REQUIRES_CHAINED_DOC_TYPE" yfc:tableName="YFS_TRANSACTION">
                    <xsd:documentation>This flag indicates whether this transaction requires a chained document type.</xsd:documentation>
                </xsd:annotation>
            </xsd:attribute>
            <xsd:attribute name="RequiresDerivedDocType"
                type="yfctype:EnumRequiresDerivedDocType" use="optional">
                <xsd:annotation
                    yfc:columnName="REQUIRES_DERIVED_DOC_TYPE" yfc:tableName="YFS_TRANSACTION">
                    <xsd:documentation>This field indicates whether derived document types are required.</xsd:documentation>
                </xsd:annotation>
            </xsd:attribute>
            <xsd:attribute name="SingleDropStatus" type="yfctype:Flag" use="optional">
                <xsd:annotation yfc:columnName="SINGLE_DROP_STATUS" yfc:tableName="YFS_TRANSACTION">
                    <xsd:documentation>This flag indicates whether this transaction can only have one drop status.</xsd:documentation>
                </xsd:annotation>
            </xsd:attribute>
            <xsd:attribute name="SpawnedProcessTypeKey"
                type="yfctype:Key" use="optional">
                <xsd:annotation
                    yfc:columnName="SPAWNED_PROCESS_TYPE_KEY" yfc:tableName="YFS_TRANSACTION">
                    <xsd:documentation>The process type that this transaction spawns.</xsd:documentation>
                </xsd:annotation>
            </xsd:attribute>
            <xsd:attribute name="SpawnsPipeline" type="yfctype:Flag" use="optional">
                <xsd:annotation yfc:columnName="SPAWNS_PIPELINE" yfc:tableName="YFS_TRANSACTION">
                    <xsd:documentation>This flag indicates whether a new type of process is spawned by this transaction.</xsd:documentation>
                </xsd:annotation>
            </xsd:attribute>
            <xsd:attribute name="SupportsOperationLevel"
                type="yfctype:Flag" use="optional">
                <xsd:annotation
                    yfc:columnName="SUPPORTS_OPERATION_LEVEL" yfc:tableName="YFS_TRANSACTION">
                    <xsd:documentation>This is a boolean that identifies whether a transaction supports operation level. For a non-derived user transaction, this is N. For a derived user transaction, the value is carried over from the abstract base transaction .</xsd:documentation>
                </xsd:annotation>
            </xsd:attribute>
            <xsd:attribute name="TaskQKeyType"
                type="yfctype:TaskType-40" use="optional">
                <xsd:annotation yfc:columnName="TASK_Q_KEY_TYPE" yfc:tableName="YFS_TRANSACTION">
                    <xsd:documentation>The type of tasks this transaction processes. This field is used by the workflow engine to determine if tasks needs be created for this transaction upon completion by other transaction.</xsd:documentation>
                </xsd:annotation>
            </xsd:attribute>
            <xsd:attribute name="TimeTriggerable" type="yfctype:Flag" use="optional">
                <xsd:annotation yfc:columnName="TIME_TRIGGERABLE" yfc:tableName="YFS_TRANSACTION">
                    <xsd:documentation>This flag indicates whether this transaction is time triggerable.</xsd:documentation>
                </xsd:annotation>
            </xsd:attribute>
            <xsd:attribute name="TimeTriggered" type="yfctype:Flag" use="optional">
                <xsd:annotation yfc:columnName="TIME_TRIGGERED" yfc:tableName="YFS_TRANSACTION">
                    <xsd:documentation>This flag indicates whether the transaction is time triggered.</xsd:documentation>
                </xsd:annotation>
            </xsd:attribute>
            <xsd:attribute name="TranSequence"
                type="yfctype:TransactionSequence" use="optional">
                <xsd:annotation yfc:columnName="TRAN_SEQUENCE" yfc:tableName="YFS_TRANSACTION">
                    <xsd:documentation>This field is not currently used.</xsd:documentation>
                </xsd:annotation>
            </xsd:attribute>
            <xsd:attribute name="Trangroup"
                type="yfctype:TransactionGroup" use="optional">
                <xsd:annotation yfc:columnName="TRANGROUP" yfc:tableName="YFS_TRANSACTION">
                    <xsd:documentation>The group identifier for the transaction. This field can be used to better organize the transactions.</xsd:documentation>
                </xsd:annotation>
            </xsd:attribute>
            <xsd:attribute name="Tranid" type="yfctype:TranId" use="optional">
                <xsd:annotation yfc:columnName="TRANID" yfc:tableName="YFS_TRANSACTION">
                    <xsd:documentation>The unique identifier for a transaction.</xsd:documentation>
                </xsd:annotation>
            </xsd:attribute>
            <xsd:attribute name="Tranname"
                type="yfctype:TransactionName-50" use="optional">
                <xsd:annotation yfc:columnName="TRANNAME" yfc:tableName="YFS_TRANSACTION">
                    <xsd:documentation>The name of the transaction.</xsd:documentation>
                </xsd:annotation>
            </xsd:attribute>
            <xsd:attribute name="TransactionKey" type="yfctype:Key" use="optional">
                <xsd:annotation yfc:columnName="TRANSACTION_KEY" yfc:tableName="YFS_TRANSACTION">
                    <xsd:documentation>The primary key for the YFS_TRANSACTION table.</xsd:documentation>
                </xsd:annotation>
            </xsd:attribute>
            <xsd:attribute name="Trantype" type="yfctype:EnumTranType" use="optional">
                <xsd:annotation yfc:columnName="TRANTYPE" yfc:tableName="YFS_TRANSACTION">
                    <xsd:documentation>This field indicates the type of the transaction.</xsd:documentation>
                </xsd:annotation>
            </xsd:attribute>
            <xsd:attribute name="UserTaskFlowKey" type="yfctype:Key" use="optional">
                <xsd:annotation yfc:columnName="USER_TASK_FLOW_KEY" yfc:tableName="YFS_TRANSACTION">
                    <xsd:documentation>The identifier of the user task flow associated with a transaction.</xsd:documentation>
                </xsd:annotation>
            </xsd:attribute>
            <xsd:attribute name="UserTriggerable" type="yfctype:Flag" use="optional">
                <xsd:annotation yfc:columnName="USER_TRIGGERABLE" yfc:tableName="YFS_TRANSACTION">
                    <xsd:documentation>This flag indicates whether this transaction is user-triggerable.</xsd:documentation>
                </xsd:annotation>
            </xsd:attribute>
            <xsd:attribute name="WorksOffTaskQ" type="yfctype:Flag" use="optional">
                <xsd:annotation yfc:columnName="WORKS_OFF_TASK_Q" yfc:tableName="YFS_TRANSACTION">
                    <xsd:documentation>this flag indicates whether a task queue record needs to be created for this transaction. Tasks are created if a document reaches the status picked by this transaction.</xsd:documentation>
                </xsd:annotation>
            </xsd:attribute>
        </xsd:complexType>
    </xsd:element>
    <xsd:element name="PipelineListenerList">
        <xsd:complexType>
            <xsd:sequence>
                <xsd:element maxOccurs="unbounded" minOccurs="0" ref="yfc:PipelineListener"/>
            </xsd:sequence>
            <xsd:attribute name="TotalNumberOfRecords"
                type="yfctype:String" use="optional"/>
        </xsd:complexType>
    </xsd:element>
    <xsd:element name="PipelineListener">
        <xsd:annotation yfc:tableName="YFS_PIPELINE_LISTENER">
            <xsd:documentation>Stores the listener transactions in a pipeline.</xsd:documentation>
        </xsd:annotation>
        <xsd:complexType>
            <xsd:attribute name="DropStatus" type="yfctype:DropStatus" use="optional">
                <xsd:annotation yfc:columnName="DROP_STATUS" yfc:tableName="YFS_PIPELINE_LISTENER">
                    <xsd:documentation>The drop status.</xsd:documentation>
                </xsd:annotation>
            </xsd:attribute>
            <xsd:attribute name="ListenerType"
                type="yfctype:ListenerType" use="optional">
                <xsd:annotation yfc:columnName="LISTENER_TYPE" yfc:tableName="YFS_PIPELINE_LISTENER">
                    <xsd:documentation>The type of the listener transaction. Each process type to process type combination consistutes a different listener type. This field can take one of the pre-defined values (00 - None, 01 - chained order to sales order listener, 02 - derived order to sales order listener, 03 - shipment to order listener, 04 - Load to shipment listener).</xsd:documentation>
                </xsd:annotation>
            </xsd:attribute>
            <xsd:attribute name="ListeningToProcessTypeKey"
                type="yfctype:Identifier" use="optional">
                <xsd:annotation
                    yfc:columnName="LISTENING_TO_PROCESS_TYPE_KEY" yfc:tableName="YFS_PIPELINE_LISTENER">
                    <xsd:documentation>The process type to which a listener transaction is configured to listen.</xsd:documentation>
                </xsd:annotation>
            </xsd:attribute>
            <xsd:attribute name="ListeningToStatus"
                type="yfctype:ListenerStatus" use="optional">
                <xsd:annotation yfc:columnName="LISTENING_TO_STATUS" yfc:tableName="YFS_PIPELINE_LISTENER">
                    <xsd:documentation>The status to which a listener transaction is configured to listen.</xsd:documentation>
                </xsd:annotation>
            </xsd:attribute>
            <xsd:attribute name="ListeningToStatusKey"
                type="yfctype:Key" use="optional">
                <xsd:annotation yfc:columnName="LISTENING_TO_STATUS_KEY" yfc:tableName="YFS_PIPELINE_LISTENER">
                    <xsd:documentation>The primary key of the status to which a listener transaction is configured to listen.</xsd:documentation>
                </xsd:annotation>
            </xsd:attribute>
            <xsd:attribute name="Lockid" type="yfctype:Lockid" use="optional">
                <xsd:annotation yfc:columnName="LOCKID" yfc:tableName="YFS_PIPELINE_LISTENER">
                    <xsd:documentation>An integer used to track and prevent concurrent modifications.</xsd:documentation>
                </xsd:annotation>
            </xsd:attribute>
            <xsd:attribute name="PipelineKey" type="yfctype:Key" use="optional">
                <xsd:annotation yfc:columnName="PIPELINE_KEY" yfc:tableName="YFS_PIPELINE_LISTENER">
                    <xsd:documentation>The pipeline on which the listener exists.</xsd:documentation>
                </xsd:annotation>
            </xsd:attribute>
            <xsd:attribute name="PipelineListenerKey" type="yfctype:Key" use="optional">
                <xsd:annotation yfc:columnName="PIPELINE_LISTENER_KEY" yfc:tableName="YFS_PIPELINE_LISTENER">
                    <xsd:documentation>Primary key.</xsd:documentation>
                </xsd:annotation>
            </xsd:attribute>
        </xsd:complexType>
    </xsd:element>
    <xsd:element name="AgentCriteriaList">
        <xsd:complexType>
            <xsd:sequence>
                <xsd:element maxOccurs="unbounded" minOccurs="0" ref="yfc:AgentCriteria"/>
            </xsd:sequence>
            <xsd:attribute name="TotalNumberOfRecords"
                type="yfctype:String" use="optional"/>
        </xsd:complexType>
    </xsd:element>
    <xsd:element name="AgentCriteria">
        <xsd:annotation yfc:tableName="YFS_AGENT_CRITERIA">
            <xsd:documentation>This table stores the configured criteria attributes for time triggered transactions. The message XML is passed to the agent java class configured for the transaction. This message XML forms the input to the agent to obtain jobs for processing.</xsd:documentation>
        </xsd:annotation>
        <xsd:complexType>
            <xsd:sequence>
                <xsd:element maxOccurs="1" minOccurs="0" ref="yfc:Flow"/>
                <xsd:element maxOccurs="unbounded" minOccurs="0" ref="yfc:MessageXml"/>
            </xsd:sequence>
            <xsd:attribute name="AgentCriteriaId"
                type="yfctype:AgentCriteriaId" use="optional">
                <xsd:annotation yfc:columnName="AGENT_CRITERIA_ID" yfc:tableName="YFS_AGENT_CRITERIA">
                    <xsd:documentation>The unique identifier of an agent criterion.</xsd:documentation>
                </xsd:annotation>
            </xsd:attribute>
            <xsd:attribute name="AgentCriteriaKey" type="yfctype:Key" use="optional">
                <xsd:annotation yfc:columnName="AGENT_CRITERIA_KEY" yfc:tableName="YFS_AGENT_CRITERIA">
                    <xsd:documentation>The primary key for the YFS_AGENT_CRITERIA table.</xsd:documentation>
                </xsd:annotation>
            </xsd:attribute>
            <xsd:attribute name="FlowKey" type="yfctype:Key" use="optional">
                <xsd:annotation yfc:columnName="FLOW_KEY" yfc:tableName="YFS_AGENT_CRITERIA">
                    <xsd:documentation>The flow key that is associated with this agent criteria.</xsd:documentation>
                </xsd:annotation>
            </xsd:attribute>
            <xsd:attribute name="MessageXml" type="yfctype:CLOB" use="optional">
                <xsd:annotation yfc:columnName="MESSAGE_XML" yfc:tableName="YFS_AGENT_CRITERIA">
                    <xsd:documentation>A criterion used by an agent for selecting the records to process.</xsd:documentation>
                </xsd:annotation>
            </xsd:attribute>
            <xsd:attribute name="ServerKey" type="yfctype:Key" use="optional">
                <xsd:annotation yfc:columnName="SERVER_KEY" yfc:tableName="YFS_AGENT_CRITERIA">
                    <xsd:documentation>The server key that is associated with this agent criteria.</xsd:documentation>
                </xsd:annotation>
            </xsd:attribute>
            <xsd:attribute name="TransactionKey" type="yfctype:Key" use="optional">
                <xsd:annotation yfc:columnName="TRANSACTION_KEY" yfc:tableName="YFS_AGENT_CRITERIA">
                    <xsd:documentation>The transaction key that is associated with this agent criteria.</xsd:documentation>
                </xsd:annotation>
            </xsd:attribute>
        </xsd:complexType>
    </xsd:element>
    <xsd:element name="Flow">
        <xsd:annotation yfc:tableName="YFS_FLOW">
            <xsd:documentation>This table stores all the configured services. It is populated when configuring services using the service builder framework or when configuring time triggered transactions for agents.</xsd:documentation>
        </xsd:annotation>
        <xsd:complexType>
            <xsd:sequence>
                <xsd:element maxOccurs="unbounded" minOccurs="0" ref="yfc:UserExitImplList"/>
                <xsd:element maxOccurs="unbounded" minOccurs="0" ref="yfc:OrgDocumentList"/>
                <xsd:element maxOccurs="unbounded" minOccurs="0" ref="yfc:SubFlowList"/>
                <xsd:element maxOccurs="unbounded" minOccurs="0" ref="yfc:InvokedFlowsList"/>
            </xsd:sequence>
            <xsd:attribute name="FlowGroupName"
                type="yfctype:GroupName-40" use="optional">
                <xsd:annotation yfc:columnName="FLOW_GROUP_NAME" yfc:tableName="YFS_FLOW">
                    <xsd:documentation>The service group name, which is used as a logical placeholder for the services.</xsd:documentation>
                </xsd:annotation>
            </xsd:attribute>
            <xsd:attribute name="FlowKey" type="yfctype:Key" use="optional">
                <xsd:annotation yfc:columnName="FLOW_KEY" yfc:tableName="YFS_FLOW">
                    <xsd:documentation>The primary key of the YFS_FLOW table. This key represents the flow of the transaction.</xsd:documentation>
                </xsd:annotation>
            </xsd:attribute>
            <xsd:attribute name="FlowName" type="yfctype:FlowName" use="optional">
                <xsd:annotation yfc:columnName="FLOW_NAME" yfc:tableName="YFS_FLOW">
                    <xsd:documentation>The flow name is a unique identifier of the service. The field size is 128  bits to accommodate the backward compatibility naming format.</xsd:documentation>
                </xsd:annotation>
            </xsd:attribute>
            <xsd:attribute name="FlowType" type="yfctype:EnumFlowType" use="optional">
                <xsd:annotation yfc:columnName="FLOW_TYPE" yfc:tableName="YFS_FLOW">
                    <xsd:documentation>The flow type identifies the service associated with this table.</xsd:documentation>
                </xsd:annotation>
            </xsd:attribute>
            <xsd:attribute name="GraphUIKey" type="yfctype:Key" use="optional">
                <xsd:annotation yfc:columnName="GRAPH_UI_KEY" yfc:tableName="YFS_FLOW">
                    <xsd:documentation>This identifier is a reference to the YFS_GRAPH_UI table, where the pictorial representation of the service is stored.</xsd:documentation>
                </xsd:annotation>
            </xsd:attribute>
            <xsd:attribute name="IsOutGoing" type="yfctype:Flag" use="optional">
                <xsd:annotation yfc:columnName="IS_OUT_GOING" yfc:tableName="YFS_FLOW">
                    <xsd:documentation>This flag indicates whether the service is invoked synchronously or asynchronously.</xsd:documentation>
                </xsd:annotation>
            </xsd:attribute>
            <xsd:attribute name="IsRealTime"
                type="yfctype:EnumIsRealTime" use="optional">
                <xsd:annotation yfc:columnName="IS_REAL_TIME" yfc:tableName="YFS_FLOW">
                    <xsd:documentation>This flag determines whether a real time response is needed.</xsd:documentation>
                </xsd:annotation>
            </xsd:attribute>
            <xsd:attribute name="OwnerKey" type="yfctype:Key" use="optional">
                <xsd:annotation yfc:columnName="OWNER_KEY" yfc:tableName="YFS_FLOW">
                    <xsd:documentation>This key indicates the owner of the service. This value is "DEFAULT", which is the hub organization for all services. However, when moving event handlers and user exits, the user interface populates this          with the appropriate enterprise organization  key.</xsd:documentation>
                </xsd:annotation>
            </xsd:attribute>
            <xsd:attribute name="ProcessTypeKey" type="yfctype:Key" use="optional">
                <xsd:annotation yfc:columnName="PROCESS_TYPE_KEY" yfc:tableName="YFS_FLOW">
                    <xsd:documentation>This key determines all the services belonging to some process type</xsd:documentation>
                </xsd:annotation>
            </xsd:attribute>
            <xsd:attribute name="TransportTypeKey" type="yfctype:Key" use="optional">
                <xsd:annotation yfc:columnName="TRANSPORT_TYPE_KEY" yfc:tableName="YFS_FLOW">
                    <xsd:documentation>The transport type key of the beginning transport node for asynchronous services or LOCAL for synchronous services.</xsd:documentation>
                </xsd:annotation>
            </xsd:attribute>
        </xsd:complexType>
    </xsd:element>
    <xsd:element name="UserExitImplList">
        <xsd:complexType>
            <xsd:all>
                <xsd:element maxOccurs="1" minOccurs="0" ref="yfc:UserExitImpl"/>
            </xsd:all>
            <xsd:attribute name="TotalNumberOfRecords"
                type="yfctype:String" use="optional"/>
        </xsd:complexType>
    </xsd:element>
    <xsd:element name="UserExitImpl">
        <xsd:annotation yfc:tableName="YFS_USER_EXIT_IMPL">
            <xsd:documentation>This table stores the user exit implementation details at the document type level or one implementation across document types.</xsd:documentation>
        </xsd:annotation>
        <xsd:complexType>
            <xsd:attribute name="CallsPerJvm" type="yfctype:Count" use="optional">
                <xsd:annotation yfc:columnName="CALLS_PER_JVM" yfc:tableName="YFS_USER_EXIT_IMPL">
                    <xsd:documentation>The number of concurrent calls of this user exit implementation per java virtual machine.</xsd:documentation>
                </xsd:annotation>
            </xsd:attribute>
            <xsd:attribute name="DocumentTypeKey" type="yfctype:Key" use="optional">
                <xsd:annotation yfc:columnName="DOCUMENT_TYPE_KEY" yfc:tableName="YFS_USER_EXIT_IMPL">
                    <xsd:documentation>This key specifies the document type for which the user exit is implemented.</xsd:documentation>
                </xsd:annotation>
            </xsd:attribute>
            <xsd:attribute name="FlowKey" type="yfctype:Key" use="optional">
                <xsd:annotation yfc:columnName="FLOW_KEY" yfc:tableName="YFS_USER_EXIT_IMPL">
                    <xsd:documentation>The service being invoked by the user exit.</xsd:documentation>
                </xsd:annotation>
            </xsd:attribute>
            <xsd:attribute name="ImplementationNotes"
                type="yfctype:ImplementationNotes" use="optional">
                <xsd:annotation yfc:columnName="IMPLEMENTATION_NOTES" yfc:tableName="YFS_USER_EXIT_IMPL">
                    <xsd:documentation>The text message about the user exit implementation.</xsd:documentation>
                </xsd:annotation>
            </xsd:attribute>
            <xsd:attribute name="JavaClassName" type="yfctype:JavaClass" use="optional">
                <xsd:annotation yfc:columnName="JAVA_CLASS_NAME" yfc:tableName="YFS_USER_EXIT_IMPL">
                    <xsd:documentation>The java class implementing the user exit. Either this attribute or the FLOW_KEY attribute needs to be specified.</xsd:documentation>
                </xsd:annotation>
            </xsd:attribute>
            <xsd:attribute name="OrgKey" type="yfctype:Key" use="optional">
                <xsd:annotation yfc:columnName="ORG_KEY" yfc:tableName="YFS_USER_EXIT_IMPL">
                    <xsd:documentation>The organization for which the user exit is being implemented. This field is currently not supported.</xsd:documentation>
                </xsd:annotation>
            </xsd:attribute>
            <xsd:attribute name="UseFlow" type="yfctype:Flag" use="optional">
                <xsd:annotation yfc:columnName="USE_FLOW" yfc:tableName="YFS_USER_EXIT_IMPL">
                    <xsd:documentation>This flag identifies whether this user exit can invoke a service.</xsd:documentation>
                </xsd:annotation>
            </xsd:attribute>
            <xsd:attribute name="UserExitImplKey" type="yfctype:Key" use="optional">
                <xsd:annotation yfc:columnName="USER_EXIT_IMPL_KEY" yfc:tableName="YFS_USER_EXIT_IMPL">
                    <xsd:documentation>The primary key attribute of the YFS_USER_EXIT_IMPL table.</xsd:documentation>
                </xsd:annotation>
            </xsd:attribute>
            <xsd:attribute name="UserExitKey" type="yfctype:Key" use="optional">
                <xsd:annotation yfc:columnName="USER_EXIT_KEY" yfc:tableName="YFS_USER_EXIT_IMPL">
                    <xsd:documentation>The user exit key associtaed with this implementation.</xsd:documentation>
                </xsd:annotation>
            </xsd:attribute>
            <xsd:attribute name="Version" type="yfctype:Version" use="optional">
                <xsd:annotation yfc:columnName="VERSION" yfc:tableName="YFS_USER_EXIT_IMPL">
                    <xsd:documentation>The user exit version. This is provided for backward compatibility of the user exit.</xsd:documentation>
                </xsd:annotation>
            </xsd:attribute>
            <xsd:attribute name="WaitTime" type="yfctype:Integer" use="optional">
                <xsd:annotation yfc:columnName="WAIT_TIME" yfc:tableName="YFS_USER_EXIT_IMPL">
                    <xsd:documentation>The wait time for the user exit calls.</xsd:documentation>
                </xsd:annotation>
            </xsd:attribute>
            <xsd:attribute name="WaitingCalls" type="yfctype:Count" use="optional">
                <xsd:annotation yfc:columnName="WAITING_CALLS" yfc:tableName="YFS_USER_EXIT_IMPL">
                    <xsd:documentation>The number of user exit calls that wait to become active.</xsd:documentation>
                </xsd:annotation>
            </xsd:attribute>
        </xsd:complexType>
    </xsd:element>
    <xsd:element name="OrgDocumentList">
        <xsd:complexType>
            <xsd:all>
                <xsd:element maxOccurs="1" minOccurs="0" ref="yfc:OrgDocument"/>
            </xsd:all>
            <xsd:attribute name="TotalNumberOfRecords"
                type="yfctype:String" use="optional"/>
        </xsd:complexType>
    </xsd:element>
    <xsd:element name="OrgDocument">
        <xsd:annotation yfc:tableName="YFS_ORG_DOCUMENT">
            <xsd:documentation>All document requirements for an organization are captured here.</xsd:documentation>
        </xsd:annotation>
        <xsd:complexType>
            <xsd:attribute name="BackupProtocolKey" type="yfctype:Key" use="optional">
                <xsd:annotation yfc:columnName="BACKUP_PROTOCOL_KEY" yfc:tableName="YFS_ORG_DOCUMENT">
                    <xsd:documentation>Identifies a backup protocol to deliver a document.</xsd:documentation>
                </xsd:annotation>
            </xsd:attribute>
            <xsd:attribute name="DocumentFormatKey" type="yfctype:Key" use="optional">
                <xsd:annotation yfc:columnName="DOCUMENT_FORMAT_KEY" yfc:tableName="YFS_ORG_DOCUMENT">
                    <xsd:documentation>Format of the document.</xsd:documentation>
                </xsd:annotation>
            </xsd:attribute>
            <xsd:attribute name="FlowKey" type="yfctype:Key" use="optional">
                <xsd:annotation yfc:columnName="FLOW_KEY" yfc:tableName="YFS_ORG_DOCUMENT">
                    <xsd:documentation>Identifies a flow key used to deliver a document.</xsd:documentation>
                </xsd:annotation>
            </xsd:attribute>
            <xsd:attribute name="OrgDocumentKey" type="yfctype:Key" use="optional">
                <xsd:annotation yfc:columnName="ORG_DOCUMENT_KEY" yfc:tableName="YFS_ORG_DOCUMENT">
                    <xsd:documentation>Primary key attribute of YFS_ORG_DOCUMENT.</xsd:documentation>
                </xsd:annotation>
            </xsd:attribute>
            <xsd:attribute name="OrganizationKey" type="yfctype:Key" use="optional">
                <xsd:annotation yfc:columnName="ORGANIZATION_KEY" yfc:tableName="YFS_ORG_DOCUMENT">
                    <xsd:documentation>An Organization for which the document requirements are maintained.</xsd:documentation>
                </xsd:annotation>
            </xsd:attribute>
            <xsd:attribute name="ProtocolKey" type="yfctype:Key" use="optional">
                <xsd:annotation yfc:columnName="PROTOCOL_KEY" yfc:tableName="YFS_ORG_DOCUMENT">
                    <xsd:documentation>Identifies protocol used to deliver a document.</xsd:documentation>
                </xsd:annotation>
            </xsd:attribute>
            <xsd:attribute name="RoleDocumentKey" type="yfctype:Key" use="optional">
                <xsd:annotation yfc:columnName="ROLE_DOCUMENT_KEY" yfc:tableName="YFS_ORG_DOCUMENT">
                    <xsd:documentation>Identifies a role document.</xsd:documentation>
                </xsd:annotation>
            </xsd:attribute>
            <xsd:attribute name="VariantReference1"
                type="yfctype:VariantReference" use="optional">
                <xsd:annotation yfc:columnName="VARIANT_REFERENCE_1" yfc:tableName="YFS_ORG_DOCUMENT">
                    <xsd:documentation>A variant reference.</xsd:documentation>
                </xsd:annotation>
            </xsd:attribute>
            <xsd:attribute name="VariantReference2"
                type="yfctype:VariantReference" use="optional">
                <xsd:annotation yfc:columnName="VARIANT_REFERENCE_2" yfc:tableName="YFS_ORG_DOCUMENT">
                    <xsd:documentation>A variant reference.</xsd:documentation>
                </xsd:annotation>
            </xsd:attribute>
            <xsd:attribute name="VariantReference3"
                type="yfctype:VariantReference" use="optional">
                <xsd:annotation yfc:columnName="VARIANT_REFERENCE_3" yfc:tableName="YFS_ORG_DOCUMENT">
                    <xsd:documentation>A variant reference.</xsd:documentation>
                </xsd:annotation>
            </xsd:attribute>
            <xsd:attribute name="VariantReference4"
                type="yfctype:VariantReference" use="optional">
                <xsd:annotation yfc:columnName="VARIANT_REFERENCE_4" yfc:tableName="YFS_ORG_DOCUMENT">
                    <xsd:documentation>A variant reference.</xsd:documentation>
                </xsd:annotation>
            </xsd:attribute>
            <xsd:attribute name="VariantReference5"
                type="yfctype:VariantReference" use="optional">
                <xsd:annotation yfc:columnName="VARIANT_REFERENCE_5" yfc:tableName="YFS_ORG_DOCUMENT">
                    <xsd:documentation>A variant reference.</xsd:documentation>
                </xsd:annotation>
            </xsd:attribute>
        </xsd:complexType>
    </xsd:element>
    <xsd:element name="SubFlowList">
        <xsd:complexType>
            <xsd:sequence>
                <xsd:element maxOccurs="unbounded" minOccurs="0" ref="yfc:SubFlow"/>
            </xsd:sequence>
            <xsd:attribute name="TotalNumberOfRecords"
                type="yfctype:String" use="optional"/>
        </xsd:complexType>
    </xsd:element>
    <xsd:element name="SubFlow">
        <xsd:annotation yfc:tableName="YFS_SUB_FLOW">
            <xsd:documentation>This table stores the configuration information at the sub flow (run time) level. Every service that is configured is translated to one or more sub flows. Depending on configuration, of each sub flow can be invoked synchronously or asynchronously by starting the IntegrationServer daemon).</xsd:documentation>
        </xsd:annotation>
        <xsd:complexType>
            <xsd:attribute name="ConfigXML" type="yfctype:CLOB" use="optional">
                <xsd:annotation yfc:columnName="CONFIG_XML" yfc:tableName="YFS_SUB_FLOW">
                    <xsd:documentation>A long column used to store the sub flow configuration.</xsd:documentation>
                </xsd:annotation>
            </xsd:attribute>
            <xsd:attribute name="FlowKey" type="yfctype:Key" use="optional">
                <xsd:annotation yfc:columnName="FLOW_KEY" yfc:tableName="YFS_SUB_FLOW">
                    <xsd:documentation>The flow key associated with this sub flow.</xsd:documentation>
                </xsd:annotation>
            </xsd:attribute>
            <xsd:attribute name="QueueKey" type="yfctype:Key" use="optional">
                <xsd:annotation yfc:columnName="QUEUE_KEY" yfc:tableName="YFS_SUB_FLOW">
                    <xsd:documentation>Queue to which the exceptions of this subflow will be sent.</xsd:documentation>
                </xsd:annotation>
            </xsd:attribute>
            <xsd:attribute name="SeqNo" type="yfctype:Count" use="optional">
                <xsd:annotation yfc:columnName="SEQ_NO" yfc:tableName="YFS_SUB_FLOW">
                    <xsd:documentation>The number used to identify the first sub flow for a service.</xsd:documentation>
                </xsd:annotation>
            </xsd:attribute>
            <xsd:attribute name="ServerKey" type="yfctype:Key" use="optional">
                <xsd:annotation yfc:columnName="SERVER_KEY" yfc:tableName="YFS_SUB_FLOW">
                    <xsd:documentation>The Server associated with this sub flow. However, not all sub flows are associated with the server.</xsd:documentation>
                </xsd:annotation>
            </xsd:attribute>
            <xsd:attribute name="SubFlowKey" type="yfctype:Key" use="optional">
                <xsd:annotation yfc:columnName="SUB_FLOW_KEY" yfc:tableName="YFS_SUB_FLOW">
                    <xsd:documentation>The primary key of the YFS_SUB_FLOW table.</xsd:documentation>
                </xsd:annotation>
            </xsd:attribute>
            <xsd:attribute name="SubFlowName" type="yfctype:SubFlowName" use="optional">
                <xsd:annotation yfc:columnName="SUB_FLOW_NAME" yfc:tableName="YFS_SUB_FLOW">
                    <xsd:documentation>A unique identifier to the sub flow or runtime level. This name is used in system management console to expose the services running for a particular server.</xsd:documentation>
                </xsd:annotation>
            </xsd:attribute>
        </xsd:complexType>
    </xsd:element>
    <xsd:element name="InvokedFlowsList">
        <xsd:complexType>
            <xsd:all>
                <xsd:element maxOccurs="1" minOccurs="0" ref="yfc:InvokedFlows"/>
            </xsd:all>
            <xsd:attribute name="TotalNumberOfRecords"
                type="yfctype:String" use="optional"/>
        </xsd:complexType>
    </xsd:element>
    <xsd:element name="InvokedFlows">
        <xsd:annotation yfc:tableName="YFS_INVOKED_FLOWS">
            <xsd:documentation>Stores the list of flows which are being invoked through an action.</xsd:documentation>
        </xsd:annotation>
        <xsd:complexType>
            <xsd:attribute name="FlowKey" type="yfctype:Key" use="optional">
                <xsd:annotation yfc:columnName="FLOW_KEY" yfc:tableName="YFS_INVOKED_FLOWS">
                    <xsd:documentation>Flow key associated with an invoked flow. This field is deprecated in favor of FlowName.</xsd:documentation>
                </xsd:annotation>
            </xsd:attribute>
            <xsd:attribute name="FlowName" type="yfctype:FlowName" use="optional">
                <xsd:annotation yfc:columnName="FLOW_NAME" yfc:tableName="YFS_INVOKED_FLOWS">
                    <xsd:documentation>Flow name associated with an invoked flow.</xsd:documentation>
                </xsd:annotation>
            </xsd:attribute>
            <xsd:attribute name="InvokedFlowsKey" type="yfctype:Key" use="optional">
                <xsd:annotation yfc:columnName="INVOKED_FLOWS_KEY" yfc:tableName="YFS_INVOKED_FLOWS">
                    <xsd:documentation>Primary key that identifies invoked flows.</xsd:documentation>
                </xsd:annotation>
            </xsd:attribute>
        </xsd:complexType>
    </xsd:element>
    <xsd:element name="MessageXml">
        <xsd:complexType>
            <xsd:sequence>
                <xsd:element maxOccurs="unbounded" minOccurs="0" ref="yfc:Attributes"/>
            </xsd:sequence>
        </xsd:complexType>
    </xsd:element>
    <xsd:element name="Attributes">
        <xsd:complexType>
            <xsd:sequence>
                <xsd:element maxOccurs="unbounded" minOccurs="0" ref="yfc:Attribute"/>
            </xsd:sequence>
        </xsd:complexType>
    </xsd:element>
    <xsd:element name="Attribute">
        <xsd:annotation yfc:tableName="YFS_ATTRIBUTE">
            <xsd:documentation>This table stores attribute definitions. Attributes represent characteristics of entities and can be assigned to an attribute group.</xsd:documentation>
        </xsd:annotation>
        <xsd:complexType>
            <xsd:attribute name="DataType"
                type="yfctype:EnumAttributeDataType" use="optional">
                <xsd:annotation yfc:columnName="DATA_TYPE" yfc:tableName="YFS_ATTRIBUTE">
                    <xsd:documentation>The data type allowed for the value of the attribute.</xsd:documentation>
                </xsd:annotation>
            </xsd:attribute>
            <xsd:attribute name="Modifiable" type="yfctype:String" use="optional"/>
            <xsd:attribute name="Name" type="yfctype:String" use="optional"/>
            <xsd:attribute name="Value" type="yfctype:String" use="optional"/>
        </xsd:complexType>
    </xsd:element>
    <xsd:element name="TranFlowList">
        <xsd:complexType>
            <xsd:sequence>
                <xsd:element maxOccurs="unbounded" minOccurs="0" ref="yfc:TranFlow"/>
            </xsd:sequence>
            <xsd:attribute name="TotalNumberOfRecords"
                type="yfctype:String" use="optional"/>
        </xsd:complexType>
    </xsd:element>
    <xsd:element name="TranFlow">
        <xsd:annotation yfc:tableName="YFS_TRAN_FLOW">
            <xsd:documentation>Stores the list of Flows configured for transaction</xsd:documentation>
        </xsd:annotation>
        <xsd:complexType>
            <xsd:attribute name="FlowKey" type="yfctype:Key" use="optional">
                <xsd:annotation yfc:columnName="FLOW_KEY" yfc:tableName="YFS_TRAN_FLOW">
                    <xsd:documentation>Flow defined for a particular transaction.</xsd:documentation>
                </xsd:annotation>
            </xsd:attribute>
            <xsd:attribute name="TranFlowKey" type="yfctype:Key" use="optional">
                <xsd:annotation yfc:columnName="TRAN_FLOW_KEY" yfc:tableName="YFS_TRAN_FLOW">
                    <xsd:documentation>Primary Key that identifies a Transaction flow.</xsd:documentation>
                </xsd:annotation>
            </xsd:attribute>
            <xsd:attribute name="TransactionKey" type="yfctype:Key" use="optional">
                <xsd:annotation yfc:columnName="TRANSACTION_KEY" yfc:tableName="YFS_TRAN_FLOW">
                    <xsd:documentation>Transaction for which a flow is defined.</xsd:documentation>
                </xsd:annotation>
            </xsd:attribute>
        </xsd:complexType>
    </xsd:element>
    <xsd:element name="PipelinePickupTranList">
        <xsd:complexType>
            <xsd:sequence>
                <xsd:element maxOccurs="unbounded" minOccurs="0" ref="yfc:PipelinePickupTran"/>
            </xsd:sequence>
            <xsd:attribute name="TotalNumberOfRecords"
                type="yfctype:String" use="optional"/>
        </xsd:complexType>
    </xsd:element>
    <xsd:element name="PipelinePickupTran">
        <xsd:annotation yfc:tableName="YFS_PIPELINE_PICKUP_TRAN">
            <xsd:documentation>Defines list of transactions which can process a given status. A given status can be processed by multiple transactions.</xsd:documentation>
        </xsd:annotation>
        <xsd:complexType>
            <xsd:attribute name="PipelineKey" type="yfctype:Key" use="optional">
                <xsd:annotation yfc:columnName="PIPELINE_KEY" yfc:tableName="YFS_PIPELINE_PICKUP_TRAN">
                    <xsd:documentation>Pipeline</xsd:documentation>
                </xsd:annotation>
            </xsd:attribute>
            <xsd:attribute name="PipelinePickupTranKey"
                type="yfctype:Key" use="optional">
                <xsd:annotation
                    yfc:columnName="PIPELINE_PICKUP_TRAN_KEY" yfc:tableName="YFS_PIPELINE_PICKUP_TRAN">
                    <xsd:documentation>Primary key attribute of YFS_PIPELINE_PICKUP_TRAN.</xsd:documentation>
                </xsd:annotation>
            </xsd:attribute>
            <xsd:attribute name="ProcessTypeKey" type="yfctype:Key" use="optional">
                <xsd:annotation yfc:columnName="PROCESS_TYPE_KEY" yfc:tableName="YFS_PIPELINE_PICKUP_TRAN">
                    <xsd:documentation>Process type</xsd:documentation>
                </xsd:annotation>
            </xsd:attribute>
            <xsd:attribute name="Status" type="yfctype:ShortStatus" use="optional">
                <xsd:annotation yfc:columnName="STATUS" yfc:tableName="YFS_PIPELINE_PICKUP_TRAN">
                    <xsd:documentation>Pick up status</xsd:documentation>
                </xsd:annotation>
            </xsd:attribute>
            <xsd:attribute name="TransactionInstanceKey"
                type="yfctype:Key" use="optional">
                <xsd:annotation
                    yfc:columnName="TRANSACTION_INSTANCE_KEY" yfc:tableName="YFS_PIPELINE_PICKUP_TRAN">
                    <xsd:documentation>Instance number of transaction in pipeline diagram.</xsd:documentation>
                </xsd:annotation>
            </xsd:attribute>
            <xsd:attribute name="TransactionKey" type="yfctype:Key" use="optional">
                <xsd:annotation yfc:columnName="TRANSACTION_KEY" yfc:tableName="YFS_PIPELINE_PICKUP_TRAN">
                    <xsd:documentation>Transaction which can pick up this status</xsd:documentation>
                </xsd:annotation>
            </xsd:attribute>
        </xsd:complexType>
    </xsd:element>
    <xsd:element name="TransactionPickupStatusList">
        <xsd:complexType>
            <xsd:sequence>
                <xsd:element maxOccurs="unbounded" minOccurs="0" ref="yfc:TransactionPickupStatus"/>
            </xsd:sequence>
            <xsd:attribute name="TotalNumberOfRecords"
                type="yfctype:String" use="optional"/>
        </xsd:complexType>
    </xsd:element>
    <xsd:element name="TransactionPickupStatus">
        <xsd:annotation yfc:tableName="YFS_TRANSACTION_PICKUP_STS">
            <xsd:documentation>List of base pick up statuses a transaction can process are stored in this table. Scenario modeler uses this information for validations.</xsd:documentation>
        </xsd:annotation>
        <xsd:complexType>
            <xsd:attribute name="IsMandatory" type="yfctype:Flag" use="optional">
                <xsd:annotation yfc:columnName="IS_MANDATORY" yfc:tableName="YFS_TRANSACTION_PICKUP_STS">
                    <xsd:documentation>This flag indicates that the status is mandatory for this transaction.</xsd:documentation>
                </xsd:annotation>
            </xsd:attribute>
            <xsd:attribute name="ProcessTypeKey" type="yfctype:Key" use="optional">
                <xsd:annotation yfc:columnName="PROCESS_TYPE_KEY" yfc:tableName="YFS_TRANSACTION_PICKUP_STS">
                    <xsd:documentation>Process type to which a transaction belongs.</xsd:documentation>
                </xsd:annotation>
            </xsd:attribute>
            <xsd:attribute name="Status" type="yfctype:ShortStatus" use="optional">
                <xsd:annotation yfc:columnName="STATUS" yfc:tableName="YFS_TRANSACTION_PICKUP_STS">
                    <xsd:documentation>Pick up status</xsd:documentation>
                </xsd:annotation>
            </xsd:attribute>
            <xsd:attribute name="TransactionKey" type="yfctype:Key" use="optional">
                <xsd:annotation yfc:columnName="TRANSACTION_KEY" yfc:tableName="YFS_TRANSACTION_PICKUP_STS">
                    <xsd:documentation>Transaction</xsd:documentation>
                </xsd:annotation>
            </xsd:attribute>
            <xsd:attribute name="TransactionPickStsKey"
                type="yfctype:Key" use="optional">
                <xsd:annotation
                    yfc:columnName="TRANSACTION_PICK_STS_KEY" yfc:tableName="YFS_TRANSACTION_PICKUP_STS">
                    <xsd:documentation>Primary key attribute of YFS_TRANSACTION_PICKUP_STS.</xsd:documentation>
                </xsd:annotation>
            </xsd:attribute>
        </xsd:complexType>
    </xsd:element>
    <xsd:element name="PipelineDefinitionList">
        <xsd:complexType>
            <xsd:sequence>
                <xsd:element maxOccurs="unbounded" minOccurs="0" ref="yfc:PipelineDefinition"/>
            </xsd:sequence>
            <xsd:attribute name="TotalNumberOfRecords"
                type="yfctype:String" use="optional"/>
        </xsd:complexType>
    </xsd:element>
    <xsd:element name="PipelineDefinition">
        <xsd:annotation yfc:tableName="YFS_PIPELINE_DEFINITION">
            <xsd:documentation>Defines the list of base drop status for a transaction within a pipeline. Transaction Instance provides ability to have same transaction appear more than once within a pipeline definition.</xsd:documentation>
        </xsd:annotation>
        <xsd:complexType>
            <xsd:attribute name="DropStatus" type="yfctype:ShortStatus" use="optional">
                <xsd:annotation yfc:columnName="DROP_STATUS" yfc:tableName="YFS_PIPELINE_DEFINITION">
                    <xsd:documentation>Base drop status for transaction</xsd:documentation>
                </xsd:annotation>
            </xsd:attribute>
            <xsd:attribute name="PipelineDefinitionKey"
                type="yfctype:Key" use="optional">
                <xsd:annotation yfc:columnName="PIPELINE_DEFINITION_KEY" yfc:tableName="YFS_PIPELINE_DEFINITION">
                    <xsd:documentation>Primary key attribute of YFS_PIPELINE_DEFINITION.</xsd:documentation>
                </xsd:annotation>
            </xsd:attribute>
            <xsd:attribute name="PipelineKey" type="yfctype:Key" use="optional">
                <xsd:annotation yfc:columnName="PIPELINE_KEY" yfc:tableName="YFS_PIPELINE_DEFINITION">
                    <xsd:documentation>Pipeline</xsd:documentation>
                </xsd:annotation>
            </xsd:attribute>
            <xsd:attribute name="TransactionInstanceKey"
                type="yfctype:Key" use="optional">
                <xsd:annotation
                    yfc:columnName="TRANSACTION_INSTANCE_KEY" yfc:tableName="YFS_PIPELINE_DEFINITION">
                    <xsd:documentation>Instance of transaction</xsd:documentation>
                </xsd:annotation>
            </xsd:attribute>
            <xsd:attribute name="TransactionKey" type="yfctype:Key" use="optional">
                <xsd:annotation yfc:columnName="TRANSACTION_KEY" yfc:tableName="YFS_PIPELINE_DEFINITION">
                    <xsd:documentation>Transaction</xsd:documentation>
                </xsd:annotation>
            </xsd:attribute>
        </xsd:complexType>
    </xsd:element>
    <xsd:element name="TransactionDropStatusList">
        <xsd:complexType>
            <xsd:sequence>
                <xsd:element maxOccurs="unbounded" minOccurs="0" ref="yfc:TransactionDropStatus"/>
            </xsd:sequence>
            <xsd:attribute name="TotalNumberOfRecords"
                type="yfctype:String" use="optional"/>
        </xsd:complexType>
    </xsd:element>
    <xsd:element name="TransactionDropStatus">
        <xsd:annotation yfc:tableName="YFS_TRANSACTION_DROP_STATUS">
            <xsd:documentation>List of base drop status for a transaction are stored in this table. Scenario modeler uses this for validating the model.</xsd:documentation>
        </xsd:annotation>
        <xsd:complexType>
            <xsd:attribute name="IsMandatory" type="yfctype:Flag" use="optional">
                <xsd:annotation yfc:columnName="IS_MANDATORY" yfc:tableName="YFS_TRANSACTION_DROP_STATUS">
                    <xsd:documentation>This flag indicates that the status is mandatory for this transaction.</xsd:documentation>
                </xsd:annotation>
            </xsd:attribute>
            <xsd:attribute name="ProcessTypeKey" type="yfctype:Key" use="optional">
                <xsd:annotation yfc:columnName="PROCESS_TYPE_KEY" yfc:tableName="YFS_TRANSACTION_DROP_STATUS">
                    <xsd:documentation>Process type to which a transaction belongs.</xsd:documentation>
                </xsd:annotation>
            </xsd:attribute>
            <xsd:attribute name="Status" type="yfctype:ShortStatus" use="optional">
                <xsd:annotation yfc:columnName="STATUS" yfc:tableName="YFS_TRANSACTION_DROP_STATUS">
                    <xsd:documentation>Drop status for transaction</xsd:documentation>
                </xsd:annotation>
            </xsd:attribute>
            <xsd:attribute name="TransactionDropStatusKey"
                type="yfctype:Key" use="optional">
                <xsd:annotation
                    yfc:columnName="TRANSACTION_DROP_STATUS_KEY" yfc:tableName="YFS_TRANSACTION_DROP_STATUS">
                    <xsd:documentation>Primary key attribute of YFS_TRANSACTION_DROP_STATUS.</xsd:documentation>
                </xsd:annotation>
            </xsd:attribute>
            <xsd:attribute name="TransactionKey" type="yfctype:Key" use="optional">
                <xsd:annotation yfc:columnName="TRANSACTION_KEY" yfc:tableName="YFS_TRANSACTION_DROP_STATUS">
                    <xsd:documentation>Transaction</xsd:documentation>
                </xsd:annotation>
            </xsd:attribute>
        </xsd:complexType>
    </xsd:element>
    <xsd:element name="EventList">
        <xsd:complexType>
            <xsd:sequence>
                <xsd:element maxOccurs="unbounded" minOccurs="0" ref="yfc:Event"/>
            </xsd:sequence>
            <xsd:attribute name="TotalNumberOfRecords"
                type="yfctype:String" use="optional"/>
        </xsd:complexType>
    </xsd:element>
    <xsd:element name="Event">
        <xsd:annotation yfc:tableName="YFS_EVENT">
            <xsd:documentation>This table lists the various events raised by the transactions.</xsd:documentation>
        </xsd:annotation>
        <xsd:complexType>
            <xsd:sequence>
                <xsd:element maxOccurs="unbounded" minOccurs="0" ref="yfc:EventConditionList"/>
                <xsd:element maxOccurs="unbounded" minOccurs="0" ref="yfc:GraphUIList"/>
            </xsd:sequence>
            <xsd:attribute name="ActionKey" type="yfctype:Key" use="optional">
                <xsd:annotation yfc:columnName="ACTION_KEY" yfc:tableName="YFS_EVENT">
                    <xsd:documentation>This field is currently not supported.</xsd:documentation>
                </xsd:annotation>
            </xsd:attribute>
            <xsd:attribute name="ActiveFlag" type="yfctype:Flag" use="optional">
                <xsd:annotation yfc:columnName="ACTIVE_FLAG" yfc:tableName="YFS_EVENT">
                    <xsd:documentation>This flag indicates whether the event is active.</xsd:documentation>
                </xsd:annotation>
            </xsd:attribute>
            <xsd:attribute name="EnterpriseKey" type="yfctype:Key" use="optional">
                <xsd:annotation yfc:columnName="ENTERPRISE_KEY" yfc:tableName="YFS_EVENT">
                    <xsd:documentation>The enterprise key associated with this event.</xsd:documentation>
                </xsd:annotation>
            </xsd:attribute>
            <xsd:attribute name="EventKey" type="yfctype:Key" use="optional">
                <xsd:annotation yfc:columnName="EVENT_KEY" yfc:tableName="YFS_EVENT">
                    <xsd:documentation>The primary key of the YFS_EVENT table.</xsd:documentation>
                </xsd:annotation>
            </xsd:attribute>
            <xsd:attribute name="EventName" type="yfctype:EventName" use="optional">
                <xsd:annotation yfc:columnName="EVENT_NAME" yfc:tableName="YFS_EVENT">
                    <xsd:documentation>The name of the event</xsd:documentation>
                </xsd:annotation>
            </xsd:attribute>
            <xsd:attribute name="Eventid" type="yfctype:Identifier" use="optional">
                <xsd:annotation yfc:columnName="EVENTID" yfc:tableName="YFS_EVENT">
                    <xsd:documentation>The unique identifier of an event.</xsd:documentation>
                </xsd:annotation>
            </xsd:attribute>
            <xsd:attribute name="ExceptionType"
                type="yfctype:ExceptionType-40" use="optional">
                <xsd:annotation yfc:columnName="EXCEPTION_TYPE" yfc:tableName="YFS_EVENT">
                    <xsd:documentation>The exception type to be raised if an exception is raised as a result of this event.</xsd:documentation>
                </xsd:annotation>
            </xsd:attribute>
            <xsd:attribute name="ExtendEnterpriseFlag"
                type="yfctype:Flag" use="optional">
                <xsd:annotation yfc:columnName="EXTEND_ENTERPRISE_FLAG" yfc:tableName="YFS_EVENT">
                    <xsd:documentation>This flag indicates whether individual enterprises are allowed to configure the event.</xsd:documentation>
                </xsd:annotation>
            </xsd:attribute>
            <xsd:attribute name="ExtendSupplierFlag" type="yfctype:Flag" use="optional">
                <xsd:annotation yfc:columnName="EXTEND_SUPPLIER_FLAG" yfc:tableName="YFS_EVENT">
                    <xsd:documentation>This field is currently not supported.</xsd:documentation>
                </xsd:annotation>
            </xsd:attribute>
            <xsd:attribute name="ShipnodeKey" type="yfctype:Key" use="optional">
                <xsd:annotation yfc:columnName="SHIPNODE_KEY" yfc:tableName="YFS_EVENT">
                    <xsd:documentation>This field is currently not used.</xsd:documentation>
                </xsd:annotation>
            </xsd:attribute>
            <xsd:attribute name="TransactionKey" type="yfctype:Key" use="optional">
                <xsd:annotation yfc:columnName="TRANSACTION_KEY" yfc:tableName="YFS_EVENT">
                    <xsd:documentation>The transaction key associated with this event.</xsd:documentation>
                </xsd:annotation>
            </xsd:attribute>
            <xsd:attribute name="Version" type="yfctype:Version" use="optional">
                <xsd:annotation yfc:columnName="VERSION" yfc:tableName="YFS_EVENT">
                    <xsd:documentation>The version of this event. This is provided for backward compatibility of the event.</xsd:documentation>
                </xsd:annotation>
            </xsd:attribute>
        </xsd:complexType>
    </xsd:element>
    <xsd:element name="EventConditionList">
        <xsd:complexType>
            <xsd:sequence>
                <xsd:element maxOccurs="unbounded" minOccurs="0" ref="yfc:EventCondition"/>
            </xsd:sequence>
            <xsd:attribute name="TotalNumberOfRecords"
                type="yfctype:String" use="optional"/>
        </xsd:complexType>
    </xsd:element>
    <xsd:element name="EventCondition">
        <xsd:annotation yfc:tableName="YFS_EVENT_CONDITION">
            <xsd:documentation>Stores conditions and actions attached with an event. These conditions are evaluated in order of priority ( Least number processed first)</xsd:documentation>
        </xsd:annotation>
        <xsd:complexType>
            <xsd:attribute name="ConditionKey" type="yfctype:Key" use="optional">
                <xsd:annotation yfc:columnName="CONDITION_KEY" yfc:tableName="YFS_EVENT_CONDITION">
                    <xsd:documentation>Link to condition attached with the event</xsd:documentation>
                </xsd:annotation>
            </xsd:attribute>
            <xsd:attribute name="EventConditionKey" type="yfctype:Key" use="optional">
                <xsd:annotation yfc:columnName="EVENT_CONDITION_KEY" yfc:tableName="YFS_EVENT_CONDITION">
                    <xsd:documentation>Primary key attribute of YFS_EVENT_CONDITION.</xsd:documentation>
                </xsd:annotation>
            </xsd:attribute>
            <xsd:attribute name="EventKey" type="yfctype:Key" use="optional">
                <xsd:annotation yfc:columnName="EVENT_KEY" yfc:tableName="YFS_EVENT_CONDITION">
                    <xsd:documentation>Link to event</xsd:documentation>
                </xsd:annotation>
            </xsd:attribute>
            <xsd:attribute name="MoreActionsFlag" type="yfctype:Flag" use="optional">
                <xsd:annotation yfc:columnName="MORE_ACTIONS_FLAG" yfc:tableName="YFS_EVENT_CONDITION">
                    <xsd:documentation>'Y' if lower priority conditions should be check even though this condition is true. Used to raise multiple actions for an event</xsd:documentation>
                </xsd:annotation>
            </xsd:attribute>
            <xsd:attribute name="OwnerKey" type="yfctype:Key" use="optional">
                <xsd:annotation yfc:columnName="OWNER_KEY" yfc:tableName="YFS_EVENT_CONDITION">
                    <xsd:documentation>Organization code setting up the event</xsd:documentation>
                </xsd:annotation>
            </xsd:attribute>
            <xsd:attribute name="OwnerType" type="yfctype:OwnerType" use="optional">
                <xsd:annotation yfc:columnName="OWNER_TYPE" yfc:tableName="YFS_EVENT_CONDITION">
                    <xsd:documentation>Not used</xsd:documentation>
                </xsd:annotation>
            </xsd:attribute>
            <xsd:attribute name="Priority"
                type="yfctype:PriorityWithDecimal" use="optional">
                <xsd:annotation yfc:columnName="PRIORITY" yfc:tableName="YFS_EVENT_CONDITION">
                    <xsd:documentation>Priority in which conditions are processed for an event</xsd:documentation>
                </xsd:annotation>
            </xsd:attribute>
        </xsd:complexType>
    </xsd:element>
    <xsd:element name="GraphUIList">
        <xsd:complexType>
            <xsd:sequence>
                <xsd:element maxOccurs="unbounded" minOccurs="0" ref="yfc:GraphUI"/>
            </xsd:sequence>
            <xsd:attribute name="TotalNumberOfRecords"
                type="yfctype:String" use="optional"/>
        </xsd:complexType>
    </xsd:element>
    <xsd:element name="GraphUI">
        <xsd:annotation yfc:tableName="YFS_GRAPH_UI">
            <xsd:documentation>Stores picture associated with scenario modelling diagrams</xsd:documentation>
        </xsd:annotation>
        <xsd:complexType>
            <xsd:attribute name="GraphRefKey" type="yfctype:Key" use="optional">
                <xsd:annotation yfc:columnName="GRAPH_REF_KEY" yfc:tableName="YFS_GRAPH_UI">
                    <xsd:documentation>Link to entity this picture is associated with</xsd:documentation>
                </xsd:annotation>
            </xsd:attribute>
            <xsd:attribute name="GraphType" type="yfctype:GraphType" use="optional">
                <xsd:annotation yfc:columnName="GRAPH_TYPE" yfc:tableName="YFS_GRAPH_UI">
                    <xsd:documentation>Type of picture</xsd:documentation>
                </xsd:annotation>
            </xsd:attribute>
            <xsd:attribute name="GraphUIKey" type="yfctype:Key" use="optional">
                <xsd:annotation yfc:columnName="GRAPH_UI_KEY" yfc:tableName="YFS_GRAPH_UI">
                    <xsd:documentation>Primary key attribute of YFS_GRAPH_UI.</xsd:documentation>
                </xsd:annotation>
            </xsd:attribute>
            <xsd:attribute name="GraphXml" type="yfctype:CLOB" use="optional">
                <xsd:annotation yfc:columnName="GRAPH_XML" yfc:tableName="YFS_GRAPH_UI">
                    <xsd:documentation>Actual picture attributes</xsd:documentation>
                </xsd:annotation>
            </xsd:attribute>
            <xsd:attribute name="OwnerKey" type="yfctype:Key" use="optional">
                <xsd:annotation yfc:columnName="OWNER_KEY" yfc:tableName="YFS_GRAPH_UI">
                    <xsd:documentation>Organization which is the owner of a graph drawn.</xsd:documentation>
                </xsd:annotation>
            </xsd:attribute>
            <xsd:attribute name="ProcessTypeKey" type="yfctype:Key" use="optional">
                <xsd:annotation yfc:columnName="PROCESS_TYPE_KEY" yfc:tableName="YFS_GRAPH_UI">
                    <xsd:documentation>A Process Type</xsd:documentation>
                </xsd:annotation>
            </xsd:attribute>
        </xsd:complexType>
    </xsd:element>
</xsd:schema>
