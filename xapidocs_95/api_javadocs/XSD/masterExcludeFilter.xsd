<?xml version="1.0" encoding="UTF-8"?>
<xsd:schema attributeFormDefault="unqualified"
    elementFormDefault="qualified"
    targetNamespace="http://www.sterlingcommerce.com/documentation/masterExcludeFilter"
    xmlns:xsd="http://www.w3.org/2001/XMLSchema"
    xmlns:yfc="http://www.sterlingcommerce.com/documentation/masterExcludeFilter" xmlns:yfctype="http://www.sterlingcommerce.com/documentation/types">
    <xsd:annotation yfc:fileName="masterExcludeFilter.xsd" yfc:rootElement="Exclude">
        <xsd:appinfo source="yfc:structure">
            <Exclude hasAttributes="Y"/>
        </xsd:appinfo>
    </xsd:annotation>
    <xsd:import
        namespace="http://www.sterlingcommerce.com/documentation/types" schemaLocation="datatypes.xsd"/>
    <xsd:element name="Exclude" type="yfc:ExcludeXSDType">
        <xsd:annotation>
            <xsd:documentation>
                <div>
                    <p>
						Used to filter the elements that are returned from the API. The API filters an 
						element if:
						<ul>
                            <li>The element doesn't match any of the inclusion specifiers</li>
                            <br/>
                            <b>OR</b>
                            <li>The element matches one of the exclusion specifiers</li>
                        </ul>
						
						The API doesn't filter <code>Optionclass</code> and <code>Optionitem</code> elements
						if it has child elements. <br/>
						
						For eg. To filter <code>Optionitem</code> element(s) which 
						has a set of properties associated to it, both <code>Optionitem</code>
						and <code>Property</code> has to be excluded by specifying exclude filters in 
						the following manner: <br/>
                        <code>
						&lt;Exclude Class="Optionitem"/&gt;<br/>
						&lt;Exclude Class="Property"/&gt;
						</code>
                    </p>
                </div>
            </xsd:documentation>
        </xsd:annotation>
    </xsd:element>
    <xsd:complexType name="ExcludeXSDType">
        <xsd:attribute name="Class" type="yfctype:Text-120" use="required">
            <xsd:annotation>
                <xsd:documentation>
                    <div>
                        <p>
							The class of item this exclusion specifier operates on.							
							<br/>Valid Values: <b>
                                <code>Item</code>
                            </b> or <b>
                                <code>Optionclass</code>
                            </b> or <b>
                                <code>Optionitem</code>
                            </b> or <b>
                                <code>Property</code>
                            </b> or <b>
                                <code>Tab</code>
                            </b> or <b>
                                <code>Messages</code>
                            </b> or <b>
                                <code>Summary</code>
                            </b> or <b>
                                <code>TraceLog</code>
                            </b> or <b>
                                <code>PropertyPool</code>
                            </b>
                        </p>
                        <p>
                            <b>
                                <code>Item</code>
                            </b> can be specified to exclude both <code>Optionclass</code> and <code>Optionitem</code>.
							</p>
                        <Validation>
                            <Condition>
                                <code>Class</code> is not passed or is void. </Condition>
                            <Error
                                Description="Mandatory Parameters for the Operation are missing." ErrorCode="YIC10000"/>
                        </Validation>
                    </div>
                </xsd:documentation>
            </xsd:annotation>
        </xsd:attribute>
        <xsd:attribute name="Name" type="yfctype:Text-480" use="optional">
            <xsd:annotation>
                <xsd:documentation>
                    <div>
							A regular expression that is matched against the name of the item, property name, or tab name.				
						</div>
                </xsd:documentation>
            </xsd:annotation>
        </xsd:attribute>
        <xsd:attribute name="Path" type="yfctype:Text-480" use="optional">
            <xsd:annotation>
                <xsd:documentation>
                    <div>
							A regular expression that is matched against the path of an item. Not valid for tab class.				
						</div>
                </xsd:documentation>
            </xsd:annotation>
        </xsd:attribute>
        <xsd:attribute name="Type" type="yfctype:Text-120" use="optional">
            <xsd:annotation>
                <xsd:documentation>
                    <div>
							This attribute is only valid for the property class. This attribute should contain the datatype 
							name of the properties that need to match.
						</div>
                </xsd:documentation>
            </xsd:annotation>
        </xsd:attribute>
    </xsd:complexType>
</xsd:schema>
