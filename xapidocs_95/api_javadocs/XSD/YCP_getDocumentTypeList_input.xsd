<?xml version="1.0" encoding="UTF-8"?>
<xsd:schema attributeFormDefault="unqualified"
    elementFormDefault="qualified"
    targetNamespace="http://www.sterlingcommerce.com/documentation/YCP/getDocumentTypeList/input"
    xmlns:xsd="http://www.w3.org/2001/XMLSchema"
    xmlns:yfc="http://www.sterlingcommerce.com/documentation/YCP/getDocumentTypeList/input" xmlns:yfctype="http://www.sterlingcommerce.com/documentation/types">
    <xsd:annotation yfc:fileName="YCP_getDocumentTypeList_input.xsd" yfc:rootElement="DocumentParams">
        <xsd:appinfo source="yfc:structure">
            <DocumentParams hasAttributes="Y">
                <DataAccessFilter hasAttributes="Y"/>
            </DocumentParams>
        </xsd:appinfo>
    </xsd:annotation>
    <xsd:import
        namespace="http://www.sterlingcommerce.com/documentation/types" schemaLocation="datatypes.xsd"/>
    <xsd:element name="DocumentParams" type="yfc:DocumentParamsXSDType">
        <xsd:annotation yfc:tableName="YFS_DOCUMENT_PARAMS">
            <xsd:documentation>This table stores information about document types. Orders can be classified into various types of documents. For example, Purchase Orders, Sales Orders, or Planned Orders, This table is a configuration table which controls behaviour of all system transactions for a given type of order.</xsd:documentation>
        </xsd:annotation>
    </xsd:element>
    <xsd:complexType name="DocumentParamsXSDType">
        <xsd:all>
            <xsd:element maxOccurs="1" minOccurs="0" ref="yfc:DataAccessFilter"/>
        </xsd:all>
        <xsd:attribute name="BaseDocumentType"
            type="yfctype:DocumentType" use="optional">
            <xsd:annotation yfc:columnName="BASE_DOCUMENT_TYPE" yfc:tableName="YFS_DOCUMENT_PARAMS">
                <xsd:documentation>The base document type that this document is associated with.</xsd:documentation>
            </xsd:annotation>
        </xsd:attribute>
        <xsd:attribute name="Description" type="yfctype:Description" use="optional">
            <xsd:annotation yfc:columnName="DESCRIPTION" yfc:tableName="YFS_DOCUMENT_PARAMS">
                <xsd:documentation>The description of the document type.</xsd:documentation>
            </xsd:annotation>
        </xsd:attribute>
        <xsd:attribute name="DocumentType" type="yfctype:DocumentType" use="optional">
            <xsd:annotation yfc:columnName="DOCUMENT_TYPE" yfc:tableName="YFS_DOCUMENT_PARAMS">
                <xsd:documentation>This field indicates the type of document for which parameters are configured.</xsd:documentation>
            </xsd:annotation>
        </xsd:attribute>
        <xsd:attribute name="IsTemplateDocument" type="yfctype:String" use="optional"/>
    </xsd:complexType>
    <xsd:element name="DataAccessFilter">
        <xsd:annotation>
            <xsd:documentation>
                <div>
				If the <code>UserId</code>, <code>ModuleCode</code>, <code>and ApplicationCode</code> attributes are passed, they will filter the document types returned by the API.
				<br>If the <code>ApplicationCode</code> and <code>ModuleCode</code> attributes are passed, the output will have the <code>DefaultDocTypeForApplication</code> attribute (depending on the existence of the attribute in the template).</br>
                </div>
            </xsd:documentation>
        </xsd:annotation>
        <xsd:complexType>
            <xsd:attribute name="ApplicationCode" type="yfctype:String" use="optional"/>
            <xsd:attribute name="ModuleCode" type="yfctype:String" use="optional"/>
            <xsd:attribute name="UserId" type="yfctype:String" use="optional"/>
        </xsd:complexType>
    </xsd:element>
</xsd:schema>
