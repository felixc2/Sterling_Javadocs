<?xml version="1.0" encoding="UTF-8"?>
<xsd:schema attributeFormDefault="unqualified"
    elementFormDefault="qualified"
    targetNamespace="http://www.sterlingcommerce.com/documentation/MasterValidation"
    xmlns:xsd="http://www.w3.org/2001/XMLSchema"
    xmlns:yfc="http://www.sterlingcommerce.com/documentation/MasterValidation" xmlns:yfctype="http://www.sterlingcommerce.com/documentation/types">
    <xsd:annotation yfc:fileName="MasterValidation.xsd" yfc:rootElement="Validation">
        <xsd:appinfo source="yfc:structure">
            <Validation hasAttributes="Y">
                <InputTemplate/>
                <ModelTemplate/>
                <PreDefinedGreexRule/>
                <DataCapture/>
            </Validation>
        </xsd:appinfo>
    </xsd:annotation>
    <xsd:import
        namespace="http://www.sterlingcommerce.com/documentation/types" schemaLocation="datatypes.xsd"/>
    <xsd:element name="Validation" type="yfc:ValidationXSDType">
        <xsd:annotation yfc:tableName="YFS_VALIDATION">
            <xsd:documentation>This table stores the configuration for a validation</xsd:documentation>
        </xsd:annotation>
    </xsd:element>
    <xsd:complexType name="ValidationXSDType">
        <xsd:sequence>
            <xsd:element maxOccurs="1" minOccurs="0" ref="yfc:InputTemplate"/>
            <xsd:element maxOccurs="1" minOccurs="0" ref="yfc:ModelTemplate"/>
            <xsd:element maxOccurs="1" minOccurs="0" ref="yfc:PreDefinedGreexRule"/>
            <xsd:element maxOccurs="1" minOccurs="0" ref="yfc:DataCapture"/>
            <xsd:any maxOccurs="unbounded" minOccurs="0" processContents="skip"/>
        </xsd:sequence>
        <xsd:attribute name="CanApprovalBePostponed" type="yfctype:Flag" use="optional">
            <xsd:annotation yfc:columnName="APPROVAL_POSTPONABLE" yfc:tableName="YFS_VALIDATION">
                <xsd:documentation>The flag indicates if the transaction violation can be approved at a later point of time. If it is marked as (N), then violation has to be approved before operator can proceed with the transaction.</xsd:documentation>
            </xsd:annotation>
        </xsd:attribute>
        <xsd:attribute name="ConfigurationGroup" type="yfctype:Text-40" use="optional">
            <xsd:annotation yfc:columnName="CONFIGURATION_GROUP" yfc:tableName="YFS_VALIDATION">
                <xsd:documentation>The configuration group that identify the level for which the validation can be configured.</xsd:documentation>
            </xsd:annotation>
        </xsd:attribute>
        <xsd:attribute name="Data_Capture" type="yfctype:CLOB" use="optional">
            <xsd:annotation yfc:columnName="DATA_CAPTURE" yfc:tableName="YFS_VALIDATION">
                <xsd:documentation>This is used to indicate the attributes whose values need to be captured to be used as part of the greex condition defined in the pre-defined greex rule.</xsd:documentation>
            </xsd:annotation>
        </xsd:attribute>
        <xsd:attribute name="Description" type="yfctype:Text-100" use="optional">
            <xsd:annotation yfc:columnName="DESCRIPTION" yfc:tableName="YFS_VALIDATION">
                <xsd:documentation>The description of the validation.</xsd:documentation>
            </xsd:annotation>
        </xsd:attribute>
        <xsd:attribute name="Domain" type="yfctype:Text-100" use="optional">
            <xsd:annotation yfc:columnName="DOMAIN" yfc:tableName="YFS_VALIDATION">
                <xsd:documentation>The validation domain for this configuration.</xsd:documentation>
            </xsd:annotation>
        </xsd:attribute>
        <xsd:attribute name="ErrorCode" type="yfctype:Text-24" use="optional">
            <xsd:annotation yfc:columnName="ERROR_CODE" yfc:tableName="YFS_VALIDATION">
                <xsd:documentation>This specifies the error code that needs to thrown in case validation fails.</xsd:documentation>
            </xsd:annotation>
        </xsd:attribute>
        <xsd:attribute name="ExternalInitPerform" type="yfctype:Flag" use="optional">
            <xsd:annotation yfc:columnName="EXTERNAL_INIT_PERFORM" yfc:tableName="YFS_VALIDATION">
                <xsd:documentation>The flag indicates that the initial validation is done outside of the framework..</xsd:documentation>
            </xsd:annotation>
        </xsd:attribute>
        <xsd:attribute name="InputTemplate" type="yfctype:DocumentType" use="optional">
            <xsd:annotation yfc:columnName="INPUT_TEMPLATE" yfc:tableName="YFS_VALIDATION">
                <xsd:documentation>The template name identfier is for determining template to be used in business API for sending the data in XML format to approval engine.</xsd:documentation>
            </xsd:annotation>
        </xsd:attribute>
        <xsd:attribute name="IsApprovalRequiredOnReoccurence"
            type="yfctype:Flag" use="optional">
            <xsd:annotation yfc:columnName="REAPPROVAL_REQUIRED" yfc:tableName="YFS_VALIDATION">
                <xsd:documentation>
                    <div>
	                    Indicates if each transaction violation for this validation needs to be approved (Y) or if subsequent violations for the same validation do not need to be approved (N).
	                    </div>
                </xsd:documentation>
            </xsd:annotation>
        </xsd:attribute>
        <xsd:attribute name="IsOverridable" type="yfctype:Flag" use="optional">
            <xsd:annotation yfc:columnName="IS_OVERRIDABLE" yfc:tableName="YFS_VALIDATION">
                <xsd:documentation>
                    <div>
	                    This flag is mainly used by SBC to indicates that the validation can be overridden by overridden rules.
	                     </div>
                </xsd:documentation>
            </xsd:annotation>
        </xsd:attribute>
        <xsd:attribute name="IsSystemDefined" type="yfctype:Flag" use="optional">
            <xsd:annotation yfc:columnName="IS_SYSTEM_DEFINED" yfc:tableName="YFS_VALIDATION">
                <xsd:documentation>This flag indicates that the validation is provided as part of the factory setup and should not be modified.</xsd:documentation>
            </xsd:annotation>
        </xsd:attribute>
        <xsd:attribute name="IsUserExitActive" type="yfctype:Flag" use="optional">
            <xsd:annotation yfc:columnName="IS_USER_EXIT_ACTIVE" yfc:tableName="YFS_VALIDATION">
                <xsd:documentation>This flag indicates that  user exit for the validation is active or not.</xsd:documentation>
            </xsd:annotation>
        </xsd:attribute>
        <xsd:attribute name="ModelTemplate" type="yfctype:DocumentType" use="optional">
            <xsd:annotation yfc:columnName="MODEL_TEMPLATE" yfc:tableName="YFS_VALIDATION">
                <xsd:documentation>The model template is used in SBC for showing appropriate model in Approval Rule creation screens</xsd:documentation>
            </xsd:annotation>
        </xsd:attribute>
        <xsd:attribute name="OrganizationCode" type="yfctype:OrgCode" use="optional">
            <xsd:annotation yfc:columnName="ORGANIZATION_CODE" yfc:tableName="YFS_VALIDATION">
                <xsd:documentation>The organization for which the validation belongs.</xsd:documentation>
            </xsd:annotation>
        </xsd:attribute>
        <xsd:attribute name="ValidationID" type="yfctype:ID-40" use="optional">
            <xsd:annotation yfc:columnName="VALIDATION_ID" yfc:tableName="YFS_VALIDATION">
                <xsd:documentation>The unique identifier for the VALIDATION.</xsd:documentation>
            </xsd:annotation>
        </xsd:attribute>
        <xsd:attribute name="ValidationKey" type="yfctype:Key" use="optional">
            <xsd:annotation yfc:columnName="VALIDATION_KEY" yfc:tableName="YFS_VALIDATION">
                <xsd:documentation>The primary key of the YFS_VALIDATION table.</xsd:documentation>
            </xsd:annotation>
        </xsd:attribute>
        <xsd:attribute name="ValidationType" type="yfctype:Text-10" use="optional">
            <xsd:annotation yfc:columnName="VALIDATION_TYPE" yfc:tableName="YFS_VALIDATION">
                <xsd:documentation>The type of the validation.</xsd:documentation>
            </xsd:annotation>
        </xsd:attribute>
        <xsd:attribute name="ViolationEntity" type="yfctype:Text-100" use="optional">
            <xsd:annotation yfc:columnName="VIOLATION_ENTITY" yfc:tableName="YFS_VALIDATION">
                <xsd:documentation>
                    <div>
						This specifies the violation entity for storing the violations and approver information.Violation entity should have corresponding transaction info entity.  
						</div>
                </xsd:documentation>
            </xsd:annotation>
        </xsd:attribute>
    </xsd:complexType>
    <xsd:element name="InputTemplate">
        <xsd:annotation>
            <xsd:documentation>
                <div>
	                 Input template to be used in business API.</div>
            </xsd:documentation>
        </xsd:annotation>
        <xsd:complexType/>
    </xsd:element>
    <xsd:element name="ModelTemplate">
        <xsd:annotation>
            <xsd:documentation>
                <div>
	                 Model template to be used in SBC.
	                   </div>
            </xsd:documentation>
        </xsd:annotation>
        <xsd:complexType/>
    </xsd:element>
    <xsd:element name="PreDefinedGreexRule">
        <xsd:annotation>
            <xsd:documentation>
                <div>
	               			The pre-defined greex rules for the validation. This can also be used as a starting point for creating the override rules for the validation that is externally performed.
	                   </div>
            </xsd:documentation>
        </xsd:annotation>
        <xsd:complexType/>
    </xsd:element>
    <xsd:element name="DataCapture">
        <xsd:annotation>
            <xsd:documentation>
                <div>
	               			This is used to indicate the attributes whose values need to be captured to be used as part of the greex condition defined in the pre-defined greex rule.
	                   </div>
            </xsd:documentation>
        </xsd:annotation>
        <xsd:complexType/>
    </xsd:element>
</xsd:schema>
