<?xml version="1.0" encoding="UTF-8"?>
<xsd:schema attributeFormDefault="unqualified"
    elementFormDefault="qualified"
    targetNamespace="http://www.sterlingcommerce.com/documentation/YDM/getShipmentContainerDetails/input"
    xmlns:xsd="http://www.w3.org/2001/XMLSchema"
    xmlns:yfc="http://www.sterlingcommerce.com/documentation/YDM/getShipmentContainerDetails/input" xmlns:yfctype="http://www.sterlingcommerce.com/documentation/types">
    <xsd:annotation
        yfc:fileName="YDM_getShipmentContainerDetails_input.xsd" yfc:rootElement="Container">
        <xsd:appinfo source="yfc:structure">
            <Container hasAttributes="Y"/>
        </xsd:appinfo>
    </xsd:annotation>
    <xsd:import
        namespace="http://www.sterlingcommerce.com/documentation/types" schemaLocation="datatypes.xsd"/>
    <xsd:element name="Container" type="yfc:ContainerXSDType">
        <xsd:annotation yfc:tableName="YFS_SHIPMENT_CONTAINER">
            <xsd:documentation>
                <div>
          To identify a <code>Container</code>, pass either <code>ShipmentContainerKey</code>
                    <i>or</i>
                    <code>ContainerNo</code> and <code>ShipmentKey</code>.  
          </div>
            </xsd:documentation>
        </xsd:annotation>
    </xsd:element>
    <xsd:complexType name="ContainerXSDType">
        <xsd:attribute name="ContainerNo" type="yfctype:ContainerNo" use="optional">
            <xsd:annotation yfc:columnName="CONTAINER_NO"
                yfc:isConditional="Y" yfc:tableName="YFS_SHIPMENT_CONTAINER">
                <xsd:documentation>The container number. This is a unique key or business key, which by itself identifies a delivery plan. If not passed as input, the system generates this number using the database sequence SEQ_YFS_CONTAINER_NO.</xsd:documentation>
            </xsd:annotation>
        </xsd:attribute>
        <xsd:attribute name="LoadKey" type="yfctype:Key" use="optional">
            <xsd:annotation yfc:columnName="LOAD_KEY"
                yfc:isConditional="Y" yfc:tableName="YFS_LOAD">
                <xsd:documentation>The primary key for the YFS_LOAD table.</xsd:documentation>
            </xsd:annotation>
        </xsd:attribute>
        <xsd:attribute name="ReadFromHistory" type="yfctype:Flag" use="optional">
            <xsd:annotation>
                <xsd:documentation>
                    <div>
               Indicates if the data should be read from the history tables.
               <br/>Default: <b>
                            <code>N</code>
                        </b>
                        <br/>Valid Values: <b>
                            <code>Y</code>
                        </b> or <b>
                            <code>N</code>
                        </b>
                        <br/>If the value is <b>
                            <code>N</code>
                        </b>, the application seeks data from the regular table, returning the data if it is found. If the value is <b>
                            <code>Y</code>
                        </b>, the application seeks data from the corresponding history tables.
               </div>
                </xsd:documentation>
            </xsd:annotation>
        </xsd:attribute>
        <xsd:attribute name="ShipmentContainerKey" type="yfctype:Key" use="optional">
            <xsd:annotation yfc:columnName="SHIPMENT_CONTAINER_KEY"
                yfc:isConditional="Y" yfc:tableName="YFS_SHIPMENT_CONTAINER">
                <xsd:documentation>The primary key for the YFS_SHIPMENT_CONTAINER table.</xsd:documentation>
            </xsd:annotation>
        </xsd:attribute>
        <xsd:attribute name="ShipmentKey" type="yfctype:Key" use="optional">
            <xsd:annotation yfc:columnName="SHIPMENT_KEY"
                yfc:isConditional="Y" yfc:tableName="YFS_SHIPMENT_CONTAINER">
                <xsd:documentation>The shipment key that is associated with this shipment container.</xsd:documentation>
            </xsd:annotation>
        </xsd:attribute>
    </xsd:complexType>
</xsd:schema>
