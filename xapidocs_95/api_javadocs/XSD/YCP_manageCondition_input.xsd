<?xml version="1.0" encoding="UTF-8"?>
<xsd:schema attributeFormDefault="unqualified"
    elementFormDefault="qualified"
    targetNamespace="http://www.sterlingcommerce.com/documentation/YCP/manageCondition/input"
    xmlns:xsd="http://www.w3.org/2001/XMLSchema"
    xmlns:yfc="http://www.sterlingcommerce.com/documentation/YCP/manageCondition/input" xmlns:yfctype="http://www.sterlingcommerce.com/documentation/types">
    <xsd:annotation yfc:fileName="YCP_manageCondition_input.xsd" yfc:rootElement="Condition">
        <xsd:appinfo source="yfc:structure">
            <Condition hasAttributes="Y"/>
        </xsd:appinfo>
    </xsd:annotation>
    <xsd:import
        namespace="http://www.sterlingcommerce.com/documentation/types" schemaLocation="datatypes.xsd"/>
    <xsd:element name="Condition" type="yfc:ConditionXSDType">
        <xsd:annotation yfc:tableName="YFS_CONDITION">
            <xsd:documentation>This table stores various conditions created in the sytem during scenario modelling.</xsd:documentation>
        </xsd:annotation>
    </xsd:element>
    <xsd:complexType name="ConditionXSDType">
        <xsd:attribute name="Action" type="yfctype:Action" use="optional">
            <xsd:annotation>
                <xsd:documentation>
                    <div>Action to take
					<br/>Valid Values: 
					<br/>
                        <b>
                            <code>Manage</code>
                        </b> - Creates a new record if it does not exist or modifies an existing record if it does.
					<br/>
                        <b>
                            <code>Create</code>
                        </b> - Creates a new record. 
					<br/>
                        <b>
                            <code>Modify</code>
                        </b> - Changes the value of an existing record.
					<br/>
                        <b>
                            <code>Delete</code>
                        </b> - Deletes an existing record.
					<br/>The default behavior is <b>
                            <code>Manage</code>
                        </b>.
					</div>
                </xsd:documentation>
            </xsd:annotation>
        </xsd:attribute>
        <xsd:attribute name="ConditionID" type="yfctype:Identifier" use="required">
            <xsd:annotation yfc:columnName="CONDITION_ID" yfc:tableName="YFS_CONDITION">
                <xsd:documentation>The unique identifier for the condition.</xsd:documentation>
            </xsd:annotation>
        </xsd:attribute>
        <xsd:attribute name="ConditionName" type="yfctype:ConditionName" use="optional">
            <xsd:annotation yfc:columnName="CONDITION_NAME" yfc:tableName="YFS_CONDITION">
                <xsd:documentation>A user defined name for the condition.</xsd:documentation>
            </xsd:annotation>
        </xsd:attribute>
        <xsd:attribute name="ConditionType"
            type="yfctype:EnumConditionType" use="optional">
            <xsd:annotation yfc:columnName="CONDITION_TYPE" yfc:tableName="YFS_CONDITION">
                <xsd:documentation>This field indicates where the condition is used. The UI uses this information to filter the list appropriately.</xsd:documentation>
            </xsd:annotation>
        </xsd:attribute>
        <xsd:attribute name="ConditionValue"
            type="yfctype:ConditionValue" use="optional">
            <xsd:annotation yfc:columnName="CONDITION_VALUE" yfc:tableName="YFS_CONDITION">
                <xsd:documentation>The actual condition.</xsd:documentation>
            </xsd:annotation>
        </xsd:attribute>
        <xsd:attribute name="GroupId" type="yfctype:Identifier" use="optional">
            <xsd:annotation yfc:columnName="GROUP_ID" yfc:tableName="YFS_CONDITION">
                <xsd:documentation>The group identifier for the condition. Conditions can be grouped together for better organization.</xsd:documentation>
            </xsd:annotation>
        </xsd:attribute>
        <xsd:attribute name="OwnerKey" type="yfctype:Key" use="required">
            <xsd:annotation yfc:columnName="OWNER_KEY" yfc:tableName="YFS_CONDITION">
                <xsd:documentation>The owner organization that is associated with this condition.</xsd:documentation>
            </xsd:annotation>
        </xsd:attribute>
        <xsd:attribute name="OwnerType" type="yfctype:OwnerType" use="optional">
            <xsd:annotation yfc:columnName="OWNER_TYPE" yfc:tableName="YFS_CONDITION">
                <xsd:documentation>This field is not currently used.</xsd:documentation>
            </xsd:annotation>
        </xsd:attribute>
        <xsd:attribute name="ProcessTypeKey" type="yfctype:Key" use="required">
            <xsd:annotation yfc:columnName="PROCESS_TYPE_KEY" yfc:tableName="YFS_CONDITION">
                <xsd:documentation>The process type that this condition is associated with.</xsd:documentation>
            </xsd:annotation>
        </xsd:attribute>
        <xsd:attribute name="ReturnType" type="yfctype:ReturnType" use="optional">
            <xsd:annotation yfc:columnName="RETURN_TYPE" yfc:tableName="YFS_CONDITION">
                <xsd:documentation>This field gives the return type of the rule created.It can have one of the three values Boolean,String and Element</xsd:documentation>
            </xsd:annotation>
        </xsd:attribute>
        <xsd:attribute name="SeqNo" type="yfctype:Count" use="optional">
            <xsd:annotation yfc:columnName="SEQ_NO" yfc:tableName="YFS_CONDITION">
                <xsd:documentation>The sequence number used to tie split conditions between database records if the condition exceeds 2000 chars.</xsd:documentation>
            </xsd:annotation>
        </xsd:attribute>
        <xsd:attribute name="Type" type="yfctype:ConditionType" use="optional">
            <xsd:annotation yfc:columnName="TYPE" yfc:tableName="YFS_CONDITION">
                <xsd:documentation>This field indicates what the type of this condition is. Valid values are: - Static: Indicates that the condition is static. - Dynamic: Indicates that the condition is dynamic. -Advanced XML: Indicates that the condition is of type Advanced XML.</xsd:documentation>
            </xsd:annotation>
        </xsd:attribute>
    </xsd:complexType>
</xsd:schema>
