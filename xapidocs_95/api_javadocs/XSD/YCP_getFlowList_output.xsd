<?xml version="1.0" encoding="UTF-8"?>
<xsd:schema attributeFormDefault="unqualified"
    elementFormDefault="qualified"
    targetNamespace="http://www.sterlingcommerce.com/documentation/YCP/getFlowList/output"
    xmlns:xsd="http://www.w3.org/2001/XMLSchema"
    xmlns:yfc="http://www.sterlingcommerce.com/documentation/YCP/getFlowList/output" xmlns:yfctype="http://www.sterlingcommerce.com/documentation/types">
    <xsd:annotation yfc:fileName="YCP_getFlowList_output.xsd" yfc:rootElement="FlowList">
        <xsd:appinfo source="yfc:structure">
            <FlowList>
                <Flow hasAttributes="Y"/>
            </FlowList>
        </xsd:appinfo>
    </xsd:annotation>
    <xsd:import
        namespace="http://www.sterlingcommerce.com/documentation/types" schemaLocation="datatypes.xsd"/>
    <xsd:element name="FlowList" type="yfc:FlowListXSDType"/>
    <xsd:complexType name="FlowListXSDType">
        <xsd:sequence>
            <xsd:element maxOccurs="unbounded" minOccurs="0" ref="yfc:Flow"/>
        </xsd:sequence>
    </xsd:complexType>
    <xsd:element name="Flow">
        <xsd:annotation yfc:tableName="YFS_FLOW">
            <xsd:documentation>This table stores all the configured services. It is populated when configuring services using the service builder framework or when configuring time triggered transactions for agents.</xsd:documentation>
        </xsd:annotation>
        <xsd:complexType>
            <xsd:attribute name="FlowGroupName"
                type="yfctype:GroupName-40" use="optional">
                <xsd:annotation yfc:columnName="FLOW_GROUP_NAME" yfc:tableName="YFS_FLOW">
                    <xsd:documentation>The service group name, which is used as a logical placeholder for the services.</xsd:documentation>
                </xsd:annotation>
            </xsd:attribute>
            <xsd:attribute name="FlowKey" type="yfctype:Key" use="optional">
                <xsd:annotation yfc:columnName="FLOW_KEY" yfc:tableName="YFS_FLOW">
                    <xsd:documentation>The primary key of the YFS_FLOW table. This key represents the flow of the transaction.</xsd:documentation>
                </xsd:annotation>
            </xsd:attribute>
            <xsd:attribute name="FlowName" type="yfctype:FlowName" use="optional">
                <xsd:annotation yfc:columnName="FLOW_NAME" yfc:tableName="YFS_FLOW">
                    <xsd:documentation>The flow name is a unique identifier of the service. The field size is 128  bits to accommodate the backward compatibility naming format.</xsd:documentation>
                </xsd:annotation>
            </xsd:attribute>
            <xsd:attribute name="FlowType" type="yfctype:EnumFlowType" use="optional">
                <xsd:annotation yfc:columnName="FLOW_TYPE" yfc:tableName="YFS_FLOW">
                    <xsd:documentation>The flow type identifies the service associated with this table.</xsd:documentation>
                </xsd:annotation>
            </xsd:attribute>
            <xsd:attribute name="GraphUIKey" type="yfctype:Key" use="optional">
                <xsd:annotation yfc:columnName="GRAPH_UI_KEY" yfc:tableName="YFS_FLOW">
                    <xsd:documentation>This identifier is a reference to the YFS_GRAPH_UI table, where the pictorial representation of the service is stored.</xsd:documentation>
                </xsd:annotation>
            </xsd:attribute>
            <xsd:attribute name="IsOutGoing" type="yfctype:Flag" use="optional">
                <xsd:annotation yfc:columnName="IS_OUT_GOING" yfc:tableName="YFS_FLOW">
                    <xsd:documentation>This flag indicates whether the service is invoked synchronously or asynchronously.</xsd:documentation>
                </xsd:annotation>
            </xsd:attribute>
            <xsd:attribute name="IsPrintService" type="yfctype:Flag" use="optional">
                <xsd:annotation yfc:columnName="IS_PRINT_SERVICE" yfc:tableName="YFS_FLOW">
                    <xsd:documentation>This field indicates if the service is used for printing the label using print document set APIs.</xsd:documentation>
                </xsd:annotation>
            </xsd:attribute>
            <xsd:attribute name="IsRealTime"
                type="yfctype:EnumIsRealTime" use="optional">
                <xsd:annotation yfc:columnName="IS_REAL_TIME" yfc:tableName="YFS_FLOW">
                    <xsd:documentation>This flag determines whether a real time response is needed.</xsd:documentation>
                </xsd:annotation>
            </xsd:attribute>
            <xsd:attribute name="OwnerKey" type="yfctype:Key" use="optional">
                <xsd:annotation yfc:columnName="OWNER_KEY" yfc:tableName="YFS_FLOW">
                    <xsd:documentation>This key indicates the owner of the service. This value is "DEFAULT", which is the hub organization for all services. However, when moving event handlers and user exits, the user interface populates this          with the appropriate enterprise organization  key.</xsd:documentation>
                </xsd:annotation>
            </xsd:attribute>
            <xsd:attribute name="ProcessTypeKey" type="yfctype:Key" use="optional">
                <xsd:annotation yfc:columnName="PROCESS_TYPE_KEY" yfc:tableName="YFS_FLOW">
                    <xsd:documentation>This key determines all the services belonging to some process type</xsd:documentation>
                </xsd:annotation>
            </xsd:attribute>
            <xsd:attribute name="SystemDefined" type="yfctype:Flag" use="optional">
                <xsd:annotation yfc:columnName="SYSTEM_DEFINED" yfc:tableName="YFS_FLOW">
                    <xsd:documentation>This flag indicates if the service is system defined and is modifiable.</xsd:documentation>
                </xsd:annotation>
            </xsd:attribute>
            <xsd:attribute name="TransportTypeKey" type="yfctype:Key" use="optional">
                <xsd:annotation yfc:columnName="TRANSPORT_TYPE_KEY" yfc:tableName="YFS_FLOW">
                    <xsd:documentation>The transport type key of the beginning transport node for asynchronous services or LOCAL for synchronous services.</xsd:documentation>
                </xsd:annotation>
            </xsd:attribute>
        </xsd:complexType>
    </xsd:element>
</xsd:schema>
