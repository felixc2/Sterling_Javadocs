<?xml version="1.0" encoding="UTF-8"?>
<xsd:schema attributeFormDefault="unqualified"
    elementFormDefault="qualified"
    targetNamespace="http://www.sterlingcommerce.com/documentation/YCP/modifyServer/input"
    xmlns:xsd="http://www.w3.org/2001/XMLSchema"
    xmlns:yfc="http://www.sterlingcommerce.com/documentation/YCP/modifyServer/input" xmlns:yfctype="http://www.sterlingcommerce.com/documentation/types">
    <xsd:annotation yfc:fileName="YCP_modifyServer_input.xsd" yfc:rootElement="Server">
        <xsd:appinfo source="yfc:structure">
            <Server hasAttributes="Y">
                <Service hasAttributes="Y"/>
            </Server>
        </xsd:appinfo>
    </xsd:annotation>
    <xsd:import
        namespace="http://www.sterlingcommerce.com/documentation/types" schemaLocation="datatypes.xsd"/>
    <xsd:element name="Server" type="yfc:ServerXSDType">
        <xsd:annotation yfc:tableName="YFS_SERVER">
            <xsd:documentation>This table stores the Server Information associated with the Services,  ServerKey is a foreign key in YFS_SUB_FLOW table.  When the IntegrationAdapter is started with a  serverName all the Sub Flows (or Runtime Id's) associated with the Server are started. All these subFlows should belong to the same Transport Protocol, such as  DB, or JMS.</xsd:documentation>
        </xsd:annotation>
    </xsd:element>
    <xsd:complexType name="ServerXSDType">
        <xsd:all>
            <xsd:element maxOccurs="1" minOccurs="0" ref="yfc:Service"/>
        </xsd:all>
        <xsd:attribute name="Action" type="yfctype:Key" use="optional">
            <xsd:annotation>
                <xsd:documentation>If passed, should be a valid value.
						<br/>Valid Values: SUSPEND, RESUME, or SHUTDOWN.</xsd:documentation>
            </xsd:annotation>
        </xsd:attribute>
        <xsd:attribute name="Async" type="yfctype:Boolean" use="optional">
            <xsd:annotation>
                <xsd:documentation>Whether to perform the operation asynchronously. If set to Y,
			the API will return after sending the request to the server being modified.
			If set to N [default], the API will only return when the request has been
			fully processed by the server. At this time, this attribute only takes effect
			when the Action is SHUTDOWN.</xsd:documentation>
            </xsd:annotation>
        </xsd:attribute>
        <xsd:attribute name="Id" type="yfctype:Key" use="required">
            <xsd:annotation>
                <xsd:documentation>Identifies the server being modified. The server Id is generated by the system.</xsd:documentation>
            </xsd:annotation>
        </xsd:attribute>
    </xsd:complexType>
    <xsd:element name="Service">
        <xsd:annotation yfc:tableName="YFS_SERVICE">
            <xsd:documentation>Services are collection of roles. An organization providing a service would mean it plays all the roles listed under the service.</xsd:documentation>
        </xsd:annotation>
        <xsd:complexType>
            <xsd:attribute name="Action" use="optional">
                <xsd:annotation>
                    <xsd:documentation>Action to perform, Suspend|Resume|Modify</xsd:documentation>
                </xsd:annotation>
                <xsd:simpleType>
                    <xsd:restriction base="yfctype:Text-40">
                        <xsd:enumeration value="Suspend"/>
                        <xsd:enumeration value="Resume"/>
                        <xsd:enumeration value="Modify"/>
                    </xsd:restriction>
                </xsd:simpleType>
            </xsd:attribute>
            <xsd:attribute name="Name" type="yfctype:Text-40" use="optional">
                <xsd:annotation>
                    <xsd:documentation>Service Name</xsd:documentation>
                </xsd:annotation>
            </xsd:attribute>
            <xsd:attribute name="NoOfThreads" type="yfctype:Count" use="optional">
                <xsd:annotation>
                    <xsd:documentation>No Of Threads dedicated for the service.</xsd:documentation>
                </xsd:annotation>
            </xsd:attribute>
        </xsd:complexType>
    </xsd:element>
</xsd:schema>
